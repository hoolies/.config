{"clipboardHistory":[{"value":"/* =============================================================================\n *\n * Waybar configuration\n *\n * Configuration reference: https://github.com/Alexays/Waybar/wiki/Configuration\n *\n * =========================================================================== */\n\n/*\nPolar Night (dark grays)\nnord0  #2e3440 - (46,52,64)\nnord1  #3b4252 - (59,66,82)\nnord2  #434c5e - (67,76,94)\nnord3  #4c566a - (76,86,106)\nSnow Storm (bright grays)\nnord4  #d8dee9 - (216,222,233)\nnord5  #e5e9f0 - (229,233,240)\nnord6  #eceff4 - (236,239,244)\nFrost (bluish colors)\nnord7  #8fbcbb - (143,188,187)\nnord8  #88c0d0 - (136,192,208)\nnord9  #81a1c1 - (129,161,193)\nnord10 #5e81ac - (94,129,172)\nAurora (bright accent colors)\nnord11 #bf616a - (191,97,106)\nnord12 #d08770 - (208,135,112)\nnord13 #ebcb8b - (235,203,139)\nnord14 #a3be8c - (163,190,140)\nnord15 #b48ead - (180,142,173)\n*/\n\n/* -----------------------------------------------------------------------------\n * Base styles\n * -------------------------------------------------------------------------- */\n\n/* Reset all styles */\n* {\n    border: none;\n    border-radius: 0;\n    min-height: 0;\n    margin: 0;\n    padding: 0;\n}\n\n/* The whole bar */\n#waybar {\n    color: #eceff4;\n    background-color: rgba(46,52,64,0.6);\n    border-radius: 5px;\n    font-family:JetBrainsMonoNerdFont;\n    font-size: 13px;\n   }\n\n*:hover {\n    border-radius: 5px;\n    transition: background 0.3s;\n}\n.modules-left \u003e widget:first-child \u003e * {\n    margin-left: 15px;\n}\n.modules-right \u003e widget:last-child \u003e * {\n    margin-right: 15px;\n}\ntooltip label {\n    font-family:JetBrainsMonoNerdFont;\n    font-size: 13px;\n}\n\n/* -----------------------------------------------------------------------------\n * Module styles\n * -------------------------------------------------------------------------- */\n\n/* Common module settings*/\n#window,\n#network,\n#privacy,\n#custom-updates,\n#custom-pacman,\n#custom-keyboard-layout,\n#cpu,\n#temperature,\n#disk,\n#memory,\n#wireplumber,\n#battery,\n#idle_inhibitor,\n#backlight,\n#bluetooth,\n#tray,\n#clock,\n#custom-settings,\n#custom-power,\n#custom-reboot,\n#custom-reboot-uefi,\n#custom-log-off,\n#custom-suspend,\n#custom-lock {\n    background: rgba(129,161,193,0.4);\n    border-radius: 4px;\n    box-shadow: 0 0 10px rgba(0,0,0,0.8);\n    padding:.1rem 1rem;\n    margin: 1px 1px;\n}\n\n#window:hover,\n#network:hover,\n#privacy:hover,\n#custom-updates:hover,\n#custom-pacman:hover,\n#custom-keyboard-layout:hover,\n#cpu:hover,\n#temperature:hover,\n#disk:hover,\n#memory:hover,\n#wireplumber:hover,\n#battery:hover,\n#idle_inhibitor:hover,\n#backlight:hover,\n#bluetooth:hover,\n#tray:hover,\n#tray .active:hover,\n#clock:hover,\n#custom-settings:hover,\n#custom-power:hover,\n#custom-reboot:hover,\n#custom-reboot-uefi:hover,\n#custom-log-off:hover,\n#custom-suspend:hover,\n#custom-lock:hover {\n    background: rgba(129,161,193,0.8);\n    box-shadow: 0 0 10px rgba(0,0,0,0.8);\n}\n\n#custom-launcher,\n#window,\n#network {\n    background: transparent;\n    box-shadow: none;\n}\n\n#custom-launcher,\n#custom-power {\n    padding-right: 1.1rem;\n}\n\n#workspaces:hover {\n    background: none;\n}\n\n#workspaces button {\n    border-radius: 5px;\n    padding: 0px 6px;\n    margin-right: 2px;\n    margin-left: 2px;\n}\n\n#workspaces button.focused {\n    border: 0.9px solid #eceff4;\n}\n\n#cpu:hover,\n#custom-settings:hover {\n    background-image: url('chevron-right.svg');\n    background-repeat: no-repeat;\n    background-position: right center;\n}\n\n#window {\n    border-style: hidden;\n    margin-top: 1px;\n}\n\n#privacy {\n    color: #ebcb8b;\n    background: rgba(235,203,139,0.1);\n}\n\n#privacy:hover {\n    color: #ebcb8b;\n    background: rgba(235,203,139,0.3);\n}\n\n#wireplumber.muted,\n#bluetooth.off,\n#idle_inhibitor.deactivated {\n    color: #88c0d0;\n}\n\n#cpu.warning,\n#memory.warning,\n#battery.warning {\n    color: #d08770;\n    background: rgba(208,135,112,0.1);\n}\n\n#cpu.warning:hover,\n#memory.warning:hover,\n#battery.warning:hover {\n    background: rgba(208,135,112,0.3);\n}\n\n#workspaces button.urgent,\n#network.disabled,\n#network.disconnected,\n#cpu.critical,\n#memory.critical,\n#temperature.critical,\n#battery.critical {\n    color: #bf616a;\n    background: rgba(191,97,106,0.1);\n}\n\n#workspaces button.urgent:hover,\n#network.disabled:hover,\n#network.disconnected:hover,\n#cpu.critical:hover,\n#memory.critical:hover,\n#temperature.critical:hover,\n#battery.critical:hover {\n    background: rgba(191,97,106,0.3);\n}\n\n@keyframes blink {\n    to {\n        color: #4c566a;\n        background-color: #eceff4;\n    }\n}\n\n#battery.critical:not(.charging) {\n    animation-name: blink;\n    animation-duration: 0.5s;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n}\n","recorded":"2025-09-28 13:42:26.354593494","filePath":"null","pinned":false},{"value":"window {\n    background-color: rgba (40, 40, 50, 0.9);\n    color: #eceff4;\n    border-radius: 30px\n}\n\n/* search entry */\nentry {\n    box-shadow: 0 0 6px 5px #2e3440;\n    background-color: rgba (0, 0, 0, 0.5)\n}\n\nbutton, image {\n    background-color: #3b4252;\n    background: none;\n    border: none;\n    margin: 10px\n}\n\nbutton:hover {\n    background-color: rgba (90, 90, 100, 1);\n    box-shadow: 0 0 6px 5px #2e3440\n}\n\n/* in case you wanted to give category buttons a different look */\n#category-button {\n    margin: 0 0px 0 0px\n}\n\n#pinned-box {\n    padding-bottom: 1px;\n    border-bottom: 1px solid gray\n}\n\n#files-box {\n    padding: 1px;\n    border: 1px solid gray\n}\n","recorded":"2025-09-28 13:41:22.878488522","filePath":"null","pinned":false},{"value":"NerdHack","recorded":"2025-09-28 13:40:53.882787928","filePath":"null","pinned":false},{"value":"JetBrainsMono","recorded":"2025-09-28 13:40:21.239409475","filePath":"null","pinned":false},{"value":"footclient -e","recorded":"2025-09-28 13:40:07.073826055","filePath":"null","pinned":false},{"value":"# output=\u003cnot set\u003e\nfont=JetBrainsMono:size=14\ndpi-aware=no\n# use-bold=no\nprompt=\"‚ùØ  \"\n# placeholder=\n# icon-theme=hicolor\n# icons-enabled=yes\n# fields=filename,name,generic\n# password-character=*\n# filter-desktop=no\n# match-mode=fzf\n# sort-result=yes\n# match-counter=no\n# delayed-filter-ms=300\n# delayed-filter-limit=20000\n# show-actions=no\nterminal=footclient -e\n# launch-prefix=\u003cnot set\u003e\n# list-executables-in-path=no\n\n# anchor=center\n# x-margin=0\n# y-margin=0\nlines=16\nwidth=50\ntabs=4\nhorizontal-pad=50\nvertical-pad=18\ninner-pad=10\n\nimage-size-ratio=.25\n\n# line-height=\u003cuse font metrics\u003e\n# letter-spacing=0\n\n# layer=overlay\nexit-on-keyboard-focus-loss=no\n\n# cache=\u003cnot set\u003e\n\n# render-workers=\u003cnumber of logical CPUs\u003e\n# match-workers=\u003cnumber of logical CPUs\u003e\n\n[colors]\nbackground=2e3440dd\ntext=eceff4ff\nprompt=81a1c1ff\nplaceholder=81a1c1ff\ninput=81a1c1ff\nmatch=88c0d0ff\nselection-match=88c0d0ff\nselection=4c566add\nselection-text=eceff4ff\n# counter=93a1a1ff\nborder=81a1c1ff\n\n[border]\n# width=1\n# radius=10\n\n[dmenu]\n# mode=text  # text|index\n# exit-immediately-if-empty=no\n\n[key-bindings]\n# cancel=Escape Control+g Control+c Control+bracketleft\n# execute=Return KP_Enter Control+y\n# execute-or-next=Tab\n# execute-input=Shift+Return Shift+KP_Enter\n# cursor-left=Left Control+b\n# cursor-left-word=Control+Left Mod1+b\n# cursor-right=Right Control+f\n# cursor-right-word=Control+Right Mod1+f\n# cursor-home=Home Control+a\n# cursor-end=End Control+e\n# delete-prev=BackSpace Control+h\n# delete-prev-word=Mod1+BackSpace Control+BackSpace Control+w\n# delete-line-backward=Control+u\n# delete-next=Delete KP_Delete Control+d\n# delete-next-word=Mod1+d Control+Delete Control+KP_Delete\n# delete-line-forward=Control+k\n# prev=Up Control+p\n# prev-with-wrap=ISO_Left_Tab\n# prev-page=Page_Up KP_Page_Up\n# next=Down Control+n\n# next-with-wrap=none\n# next-page=Page_Down KP_Page_Down\n# expunge=Shift+Delete\n# clipboard-paste=Control+v XF86Paste\n# primary-paste=Shift+Insert Shift+KP_Insert\n\n# custom-N: *dmenu mode only*. Like execute, but with a non-zero\n# exit-code; custom-1 exits with code 10, custom-2 with 11, custom-3\n# with 12, and so on.\n\n# custom-1=Mod1+1\n# custom-2=Mod1+2\n# custom-3=Mod1+3\n# custom-4=Mod1+4\n# custom-5=Mod1+5\n# custom-6=Mod1+6\n# custom-7=Mod1+7\n# custom-8=Mod1+8\n# custom-9=Mod1+9\n# custom-10=Mod1+0\n# custom-11=Mod1+exclam\n# custom-12=Mod1+at\n# custom-13=Mod1+numbersign\n# custom-14=Mod1+dollar\n# custom-15=Mod1+percent\n# custom-16=Mod1+dead_circumflex\n# custom-17=Mod1+ampersand\n# custom-18=Mod1+asterix\n# custom-19=Mod1+parentleft\n","recorded":"2025-09-28 13:39:18.526389062","filePath":"null","pinned":false},{"value":"from i3ipc import Connection, Event\nfrom threading import Thread\nfrom time import sleep\n\n\nFRAME_T = 0.01  # time taken between each frame of fade\n\n# transparency values\nCON_AC     = 1     # active window\nCON_INAC   = 0.7   # inactive window\nFLOAT_AC   = 1     # active floating window\nFLOAT_INAC = 0.95  # inactive floating window\nBOT_INAC   = 0.9   # bottom window\n\n\n# fade durations\nFADE_TIME      = 0.2\nALT_FADE_TIME  = 0.1\n\nCON_OUT        = FADE_TIME      # window fading out\nCON_IN         = 0.15           # window fading in\nFLOAT_OUT      = ALT_FADE_TIME  # floating window fading out\nFLOAT_IN       = ALT_FADE_TIME  # floating window fading in\nBOT_OUT        = ALT_FADE_TIME  # bottom window fading out\nBOT_IN         = ALT_FADE_TIME  # bottom window fading in\nBOT_SWITCH_IN  = FADE_TIME      # window becoming bottom window\nBOT_SWITCH_OUT = FADE_TIME      # bottom window becoming window\nFLOAT_BOT_OUT  = FADE_TIME      # floating window fading out from bottom\nFLOAT_BOT_IN   = FADE_TIME      # floating window fading in from bottom\n\n\nclass Fader:\n    def __init__(self):\n        self.floating_windows = []\n        self.fader_running    = False\n        self.fade_queue       = []\n        self.fade_data        = {}\n        self.bottom_win       = None\n        self.old_win          = None\n        self.active_win       = None\n\n        ipc = Connection()\n        ipc.on(Event.WINDOW_FOCUS,    self.on_window_focus)\n        ipc.on(Event.WINDOW_NEW,      self.on_window_new)\n        ipc.on(Event.WINDOW_FLOATING, self.on_window_floating)\n\n        for win in ipc.get_tree():\n            if win.type == \"floating_con\":\n                self.floating_windows.append(win.id)\n                if win.focused:\n                    change_opacity(win, FLOAT_AC)\n                    self.active_win = win\n                else:\n                    change_opacity(win, FLOAT_INAC)\n            elif win.type == \"con\":\n                if win.focused:\n                    self.active_win = win\n                    change_opacity(win, CON_AC)\n                else:\n                    change_opacity(win, CON_INAC)\n\n        ipc.main()\n\n    def add_fade(self, win, start, target, duration):\n        if not duration:\n            if win.id in self.fade_queue:\n                self.fade_queue.remove(win.id)\n                del self.fade_data[win.id]\n            change_opacity(win, target)\n            return\n\n        if win.id in self.fade_queue:\n            f = self.fade_data[win.id]\n            change = (FRAME_T / duration) * (target - f[\"opacity\"])\n            f[\"change\"] = change\n            f[\"target\"] = target\n            return\n\n        change_opacity(win, start)\n        change = (FRAME_T / duration) * (target - start)\n        fade_data = {\"opacity\": start, \"change\": change, \"target\": target, \"win\": win}\n        self.fade_queue.append(win.id)\n        self.fade_data[win.id] = fade_data\n\n    def start_fader(self):\n        if not self.fader_running:\n            self.fader_running = True\n            Thread(target=self.fader).start()\n\n    def fader(self):\n        while self.fade_queue:\n            for win_id in self.fade_queue.copy():\n                try:\n                    f = self.fade_data[win_id]\n                except KeyError:\n                    continue\n                f[\"opacity\"] += f[\"change\"]\n\n                finished = False\n                if f[\"change\"] \u003e 0:\n                    if f[\"opacity\"] \u003e= f[\"target\"]:\n                        finished = True\n                elif f[\"opacity\"] \u003c= f[\"target\"]:\n                    finished = True\n\n                if finished:\n                    change_opacity(f[\"win\"], f[\"target\"])\n                    try:\n                        self.fade_queue.remove(win_id)\n                        del self.fade_data[win_id]\n                    except (KeyError, ValueError):\n                        continue\n                else:\n                    change_opacity(f[\"win\"], f[\"opacity\"])\n\n            sleep(FRAME_T)\n        self.fader_running = False\n\n    def on_window_focus(self, ipc, e):\n        if self.active_win.id == e.container.id:\n            return\n\n        if self.active_win.type == \"con\":\n            if e.container.type == \"con\":\n                self.add_fade(\n                    e.container, CON_INAC,\n                    CON_AC, CON_IN)\n                self.add_fade(\n                    self.active_win, CON_AC,\n                    CON_INAC, CON_OUT)\n\n            else:\n                self.add_fade(\n                    e.container, FLOAT_INAC,\n                    FLOAT_AC, FLOAT_IN)\n                self.add_fade(\n                    self.active_win, CON_AC,\n                    BOT_INAC, BOT_OUT)\n                self.bottom_win = self.active_win\n\n        else:\n            if e.container.type == \"con\":\n                self.add_fade(\n                    self.active_win, FLOAT_AC,\n                    FLOAT_INAC, FLOAT_BOT_OUT)\n\n                if not self.bottom_win:\n                    self.add_fade(\n                        e.container, CON_INAC,\n                        CON_AC, CON_IN)\n\n                elif e.container.id != self.bottom_win.id:\n                    self.add_fade(\n                        self.bottom_win, BOT_INAC,\n                        CON_INAC, BOT_SWITCH_OUT)\n                    self.add_fade(\n                        e.container, CON_INAC,\n                        CON_AC, BOT_SWITCH_IN)\n                    self.bottom_win = e.container\n\n                else:\n                    self.add_fade(\n                        self.bottom_win, BOT_INAC,\n                        CON_AC, BOT_IN)\n\n            else:\n                self.add_fade(\n                    self.active_win, FLOAT_AC,\n                    FLOAT_INAC, FLOAT_OUT)\n                self.add_fade(\n                    e.container, FLOAT_INAC,\n                    FLOAT_AC, FLOAT_IN)\n\n        self.start_fader()\n        self.active_win = e.container\n\n    def on_window_new(self, ipc, e):\n        if self.active_win:\n            if self.active_win.type == \"con\":\n                change_opacity(self.active_win, CON_INAC)\n            else:\n                change_opacity(self.active_win, FLOAT_INAC)\n\n        if self.bottom_win:\n            change_opacity(self.bottom_win, CON_INAC)\n\n        elif self.active_win and self.active_win.type == \"con\":\n            self.bottom_win = self.active_win\n            change_opacity(self.bottom_win, CON_INAC)\n\n        change_opacity(e.container, CON_AC)\n        self.old_win = self.active_win\n        self.active_win = e.container\n\n    def on_window_floating(self, ipc, e):\n        c_id = e.container.id\n        if c_id not in self.floating_windows:\n            self.floating_windows.append(c_id)\n\n            if self.active_win.id != e.container.id:\n                change_opacity(e.container, FLOAT_INAC)\n\n            else:\n                if self.old_win and self.bottom_win:\n                    if self.old_win.type == \"con\":\n                        self.bottom_win = self.old_win\n                    change_opacity(self.bottom_win, BOT_INAC)\n                change_opacity(e.container, FLOAT_AC)\n\n        else:\n            self.floating_windows.remove(c_id)\n            if self.active_win.id != e.container.id:\n                change_opacity(e.container, CON_INAC)\n\n            else:\n                if self.old_win and self.old_win.type == \"con\":\n                    change_opacity(self.old_win, CON_INAC)\n                change_opacity(self.active_win, CON_AC)\n\n        self.active_win = e.container\n\n\ndef change_opacity(win, trans):\n    win.command(\"opacity \" + str(trans))\n\n\nif __name__ == \"__main__\":\n    Fader()\n\n","recorded":"2025-09-28 13:34:01.880987015","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\ngrim -g \"$(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | \"\\(.x),\\(.y) \\(.width)x\\(.height)\"' | slurp)\" - | swappy -f -\n","recorded":"2025-09-28 13:33:36.069004116","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\noutput_id=$(swaymsg -t get_outputs | jq -r '.[] | select(.focused).name')\ngrim -o $output_id - | swappy -f -\n","recorded":"2025-09-28 13:31:05.380008634","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\nSELECTION=\"$(printf \"Û∞åæ Lock\\nÛ∞§Ñ Suspend\\nÛ∞çÉ Log out\\nÓ´í Reboot\\nÓÆê Reboot to UEFI\\nÛ∞ê• Shutdown\" | fuzzel --dmenu -l 6 -w 18 -p \"Select an option: \")\"\n\nconfirm_action() {\n    local action=\"$1\"\n    CONFIRMATION=\"$(printf \"No\\nYes\" | fuzzel --dmenu -l 2 -w 18 -p \"$action?\")\"\n    [[ \"$CONFIRMATION\" == *\"Yes\"* ]]\n}\n\ncase $SELECTION in\n    *\"Û∞åæ Lock\"*)\n        gtklock;;\n    *\"Û∞§Ñ Suspend\"*)\n        if confirm_action \"Suspend\"; then\n            systemctl suspend\n        fi;;\n    *\"Û∞çÉ Log out\"*)\n        if confirm_action \"Log out\"; then\n            swaymsg exit\n        fi;;\n    *\"Ó´í Reboot\"*)\n        if confirm_action \"Reboot\"; then\n            systemctl reboot\n        fi;;\n    *\"ÓÆê Reboot to UEFI\"*)\n        if confirm_action \"Reboot to UEFI\"; then\n            systemctl reboot --firmware-setup\n        fi;;\n    *\"Û∞ê• Shutdown\"*)\n        if confirm_action \"Shutdown\"; then\n            systemctl poweroff\n        fi;;\nesac\n","recorded":"2025-09-28 13:30:12.213388924","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n##\n## By default, Sway sets HiDPI displays to 2.0 scaling. Testing revealed this\n## can lead to a bad experience in the live environment on some displays. This\n## script checks if the scaling has been set to 2.0, and sets it to 1.5 instead.\n##\n## After configuring your outputs according to your preference in\n## ~/.config/sway/config.d/output, this script can be deleted.\n##\n\n# Iterate over each output and check for 2.0 scaling\nswaymsg -t get_outputs | jq -r '.[] | select(.scale == 2.0) | .name' | while read -r output; do\n\t# Set scale factor to 1.5 for HiDPI displays\n\tswaymsg output \"$output\" scale 1.5\ndone\n","recorded":"2025-09-28 13:28:20.938690060","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Send a notification about the keybinding cheatsheet\nnotify-send -t 600000 -i $HOME/.icons/up-left.png \"ÔÑú  Click the keyboard icon in the Waybar to launch the Sway keybinding cheatsheet.\"\n\n# Self-destructing script!\nrm $HOME/.config/sway/config.d/cheatsheet_hint\nrm -- \"$0\"\n","recorded":"2025-09-28 13:24:58.882200202","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\nif bluetoothctl show | grep 'Powered: no' -q; then\n    bluetoothctl power on\nelse\n    bluetoothctl power off\nfi\n","recorded":"2025-09-28 12:33:47.381218395","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Check what workspace we are on\ncurrent_workspace=$(swaymsg -t get_workspaces | jq '.[] | select(.focused == true).num')\n\n# Check the total number of workspaces\ntotal_workspaces=$(swaymsg -t get_workspaces | jq 'length')\n\n# Check if the current workspace is greater than or equal to the total number of workspaces\nif [ \"$current_workspace\" -ge \"$total_workspaces\" ]; then\n    # If it is, create a new workspace at current_workspace + 1\n    swaymsg workspace number \"$((current_workspace + 1))\"\nelse\n    # If it's not, simply switch to the next workspace\n    swaymsg workspace next\nfi\n","recorded":"2025-09-28 12:30:44.901769568","filePath":"null","pinned":false},{"value":"#!/bin/sh\n\n# usage: import-gsettings\nconfig=\"${XDG_CONFIG_HOME:-$HOME/.config}/gtk-3.0/settings.ini\"\nif [ ! -f \"$config\" ]; then exit 1; fi\n\ngnome_schema=\"org.gnome.desktop.interface\"\ngtk_theme=\"$(grep 'gtk-theme-name' \"$config\" | cut -d'=' -f2)\"\nicon_theme=\"$(grep 'gtk-icon-theme-name' \"$config\" | cut -d'=' -f2)\"\ncursor_theme=\"$(grep 'gtk-cursor-theme-name' \"$config\" | cut -d'=' -f2)\"\nfont_name=\"$(grep 'gtk-font-name' \"$config\" | cut -d'=' -f2)\"\ngsettings set \"$gnome_schema\" gtk-theme \"$gtk_theme\"\ngsettings set \"$gnome_schema\" icon-theme \"$icon_theme\"\ngsettings set \"$gnome_schema\" cursor-theme \"$cursor_theme\"\ngsettings set \"$gnome_schema\" font-name \"$font_name\"\n","recorded":"2025-09-28 12:29:59.973560111","filePath":"null","pinned":false},{"value":"bindsym ","recorded":"2025-09-28 12:05:35.896073893","filePath":"null","pinned":false},{"value":"bindsym \nbindsym \n","recorded":"2025-09-28 12:04:23.471039287","filePath":"null","pinned":false},{"value":"Ditto","recorded":"2025-09-28 12:02:28.238806675","filePath":"null","pinned":false},{"value":"bindsym","recorded":"2025-09-28 11:52:42.114753903","filePath":"null","pinned":false},{"value":"dmenu_path | wmenu | xargs swaymsg exec --","recorded":"2025-09-28 11:51:34.854867635","filePath":"null","pinned":false},{"value":"Your preferred terminal emulator","recorded":"2025-09-28 11:49:53.333215658","filePath":"null","pinned":false},{"value":"set \nset \nset \nset \nset \n","recorded":"2025-09-28 11:48:28.536071518","filePath":"null","pinned":false},{"value":"# Run the cheatsheet notification script\n\nexec ~/.config/sway/scripts/cheatsheet_hint.sh\n","recorded":"2025-09-28 11:45:26.231501548","filePath":"null","pinned":false},{"value":"# Auth with polkit-gnome:\nexec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1\n\n# Import environment variables for user systemd service manager\nexec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP\n\n# Update dbus environments with display variables\nexec hash dbus-update-activation-environment 2\u003e/dev/null \u0026\u0026 \\\n    dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway\n\n# Idle configuration\nexec swayidle idlehint 1\nexec_always swayidle -w before-sleep \"gtklock -d\"\n\n# Desktop notifications\nexec mako\n\n# Start foot server\nexec_always --no-startup-id foot --server\n\n# Autotiling\nexec autotiling\n\n# Launch all Sway applications in autostart directories\nexec dex -a -e sway\n\n# cliphist\nexec wl-paste --type text --watch cliphist store\nexec wl-paste --type image --watch cliphist store\n\n# Outputs\nexec kanshi\n\n# nwg-drawer\nexec_always nwg-drawer -r -c 7 -is 90 -mb 10 -ml 50 -mr 50 -mt 10\n\n# swayrd\nexec_always swayrd\n\n# Sway Fader\nexec python3 ~/.config/sway/scripts/swayfader.py     \n","recorded":"2025-09-28 11:43:50.898334710","filePath":"null","pinned":false},{"value":"# set floating (nontiling)\nfor_window [class=\"Yad\" instance=\"yad\"] floating enable\nfor_window [app_id=\"yad\"] floating enable\nfor_window [app_id=\"blueman-manager\"] floating enable,  resize set width 40 ppt height 30 ppt\nfor_window [app_id=\"calamares\"] floating enable\nfor_window [app_id=\"pavucontrol\" ] floating enable, resize set width 50 ppt height 50 ppt\nfor_window [app_id=\"garuda-rani\"] floating enable, resize set width 70 ppt height 70 ppt\nfor_window [app_id=\"garuda-assistant\"] floating enable\nfor_window [app_id=\"garuda-gamer\"] floating enable\nfor_window [app_id=\"garuda-settings-manager\"] floating enable\nfor_window [app_id=\"garuda-network-assistant\"] floating enable\nfor_window [app_id=\"garuda-boot-options\"] floating enable\nfor_window [app_id=\"setup-assistant\"] floating enable, resize set width 70 ppt height 70 ppt\nfor_window [title=\"launch-terminal\"] floating enable, resize set width 60 ppt height 80 ppt\nfor_window [app_id=\"galculator\"] floating enable, move position cursor\nfor_window [window_role=\"pop-up\"] floating enable\nfor_window [window_role=\"bubble\"] floating enable\nfor_window [window_role=\"task_dialog\"] floating enable\nfor_window [window_role=\"Preferences\"] floating enable\nfor_window [window_type=\"dialog\"] floating enable\nfor_window [window_type=\"menu\"] floating enable\nfor_window [window_role=\"About\"] floating enable\nfor_window [title=\"File Operation Progress\"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt\nfor_window [app_id=\"floating_shell_portrait\"] floating enable, border pixel 1, sticky enable, resize set width 30 ppt height 40 ppt\nfor_window [title=\"Picture in picture\"] floating enable, sticky enable\nfor_window [app_id=\"xsensors\"] floating enable\nfor_window [title=\"Save File\"] floating enable\nfor_window [title=\"waybar_btm\"] floating enable, resize set width 50 ppt height 70 ppt\nfor_window [title=\"waybar_nmtui\"] floating enable\nfor_window [title=\"waybar_garuda-update\"] floating enable, resize set width 80 ppt height 80 ppt\nfor_window [title=\"waybar_pacseek\"] floating enable, resize set width 80 ppt height 80 ppt\nfor_window [title=\"waybar_dua\"] floating enable, resize set width 60 ppt height 80 ppt\nfor_window [title=\"waybar_battop\"] floating enable, resize set width 60 ppt height 60 ppt\nfor_window [title=\"waybar_bluetui\"] floating enable, resize set width 50 ppt height 70 ppt\nfor_window [title=\"waybar_s-tui\"] floating enable, resize set width 50 ppt height 70 ppt\nfor_window [title=\"waybar_calcurse\"] floating enable, resize set width 60 ppt height 60 ppt\nfor_window [title=\"waybar_calcurse-caldav\"] floating enable, move position cursor\nfor_window [title=\"sway_config\"] floating enable, resize set width 80 ppt height 80 ppt\n\n# Inhibit idle\nfor_window [app_id=\"librewolf\"] inhibit_idle fullscreen\nfor_window [app_id=\"Chromium\"] inhibit_idle fullscreen\n","recorded":"2025-09-28 11:43:28.089340521","filePath":"null","pinned":false},{"value":"# Config for sway\n#\n# Read `man 5 sway` for a complete reference.\n\n# user config directory\ninclude $HOME/.config/sway/config.d/*\n","recorded":"2025-09-28 11:42:31.934637505","filePath":"null","pinned":false},{"value":"{\n    \"layer\": \"top\",\n    \"position\": \"top\", // Waybar position (top|bottom|left|right)\n    //\"height\": 30, // Uncomment to set a custom height\n    //\"output\": \"DP-1\", // Uncomment to specify a display\n    //\"width\": 1850, // Uncomment to set a custom width\n\n// Configuration - modules-left\n\n    \"modules-left\": [\n        \"custom/launcher\",\n        \"sway/workspaces\",\n        \"sway/window\"\n    ],\n\n    \"custom/launcher\": {\n        \"format\":\"\u003cspan size='x-large'\u003eÔå∑\u003c/span\u003e\",\n        \"on-click\": \"exec nwg-drawer\",\n        \"tooltip\": false\n    },\n\n    \"sway/workspaces\": {\n        \"disable-scroll\": true,\n        \"all-outputs\": true,\n        \"format\": \"{icon}\",\n        \"format-icons\": {\n            \"3\": \"3\",\n            \"4\": \"4\",\n            \"5\": \"5\",\n            \"6\": \"6\",\n            \"7\": \"7\",\n            \"8\": \"8\",\n            \"9\": \"9\",\n            \"10\": \"10\"\n        }\n    },\n\n    \"sway/window\": {\n        \"format\": \"{}\",\n        //\"all-outputs\": true, // Active window shows only on active display when commented\n        \"max-length\": 120,\n        \"on-click\": \"swayr merge-config ~/.config/swayr/waybar_config.toml; swayr switch-workspace-or-window; swayr reload-config\",\n    },\n\n// Configuration - modules-center\n    \n    \"modules-center\": [\n        \"network\"\n    ],\n\n    \"network\": {\n        \"format-disabled\": \"ÔÅ± Disabled\",\n        \"format-wifi\": \"Ôá´ {bandwidthDownBits:\u003e} Û∞∂° {bandwidthUpBits:\u003e} Û∞∂£\",\n        \"tooltip-format-wifi\": \"ESSID: {essid}\",\n        \"format-ethernet\": \"Û∞àÄ {bandwidthDownBits:\u003e} Û∞∂° {bandwidthUpBits:\u003e} Û∞∂£\",\n        \"tooltip-format-ethernet\": \"{ifname}: {ipaddr}/{cidr}\",\n        \"format-disconnected\": \"ÔÅ± Disconnected\",\n        \"on-click\": \"footclient -T waybar_nmtui -e nmtui\",\n        \"interval\": 2\n    },\n\n// Configuration - modules-right\n\n    \"modules-right\": [\n        \"privacy\",\n        \"group/updates\",\n        \"custom/keyboard-layout\",\n        \"group/resources\",\n        \"memory\",\n        \"wireplumber\",\n        \"battery\",\n        \"group/settings\",\n        \"clock\",\n        \"group/power\",\n    ],\n\n    \"privacy\": {\n    \t\"icon-spacing\": 4,\n    \t\"icon-size\": 18,\n    \t\"transition-duration\": 250,\n    \t\"modules\": [\n    \t\t{\n    \t\t\t\"type\": \"screenshare\",\n    \t\t\t\"tooltip\": true,\n    \t\t\t\"tooltip-icon-size\": 24\n    \t\t},\n    \t\t{\n    \t\t\t\"type\": \"audio-out\",\n    \t\t\t\"tooltip\": true,\n    \t\t\t\"tooltip-icon-size\": 24\n    \t\t},\n    \t\t{\n    \t\t\t\"type\": \"audio-in\",\n    \t\t\t\"tooltip\": true,\n    \t\t\t\"tooltip-icon-size\": 24\n    \t\t}\n    \t]\n    },\n\n    \"group/updates\": {\n        \"orientation\": \"inherit\",\n        \"drawer\": {\n            \"transition-duration\": 500,\n            \"children-class\": \"updates-drawer\",\n            \"transition-left-to-right\": false,\n            \"click-to-reveal\": false,\n        },\n        \"modules\": [\n            \"custom/updates\",\n            \"custom/pacman\",\n        ]\n    },\n    \"custom/updates\": {\n        \"format\": \"{icon}{0}\",\n        \"return-type\": \"json\",\n        \"format-icons\": {\n            \"has-updates\": \"ÔÄ° \",\n            \"updated\": \"ÔÅÜ\"\n        },\n        \"exec-if\": \"which waybar-module-pacman-updates\",\n        \"exec\": \"waybar-module-pacman-updates --no-zero-output --interval-seconds 5 --network-interval-seconds 300 --tooltip-align-columns\",\n        \"on-click\": \"footclient -T waybar_pacseek -e pacseek -ui\",\n    },\n\n    \"custom/pacman\": {\n        \"format\": \"Û∞ÆØ\",\n        \"tooltip-format\": \"LÛ∞çΩ: Pacseek\\nRÛ∞çΩ: Upgrade\",\n        \"on-click\": \"footclient -T waybar_pacseek -e pacseek\",\n        \"on-click-right\": \"footclient -T waybar_garuda-update -e bash -c 'garuda-update \u0026\u0026 (read -p \\\"Update complete. Press Enter to exit.\\\" \u0026\u0026 exit 0) || (read -p \\\"Update failed. Press Enter to exit.\\\" \u0026\u0026 exit 1)'\",\n    },\n\n    \"custom/keyboard-layout\": {\n      \t\"exec\": \"i=$(swaymsg -t get_inputs); echo \\\"$i\\\" | grep -m1 'xkb_active_layout_name' | cut -d '\\\"' -f4\",\n        \"format\": \"ÔÑú\",\n        \"tooltip-format\": \"Û∞çΩ: cheatsheet\\nLayout: {0}\",\n        // Interval set only as a fallback; use signal to update the module more immediately\n        \"interval\": 30,\n        // See example config for sending signal to Waybar in ~/.config/sway/config.d/input\n        \"signal\": 1,\n        \"on-click\": \"~/.config/waybar/scripts/keyhint.sh\",\n    },\n    \n    \"group/resources\": {\n        \"orientation\": \"inherit\",\n        \"drawer\": {\n            \"transition-duration\": 500,\n            \"children-class\": \"resources-drawer\",\n            \"transition-left-to-right\": true,\n            \"click-to-reveal\": true,\n        },\n        \"modules\": [\n            \"cpu\",\n            \"temperature\",\n            \"disk\",\n        ]\n    },\n\n    \"cpu\": {\n        \"interval\": 5,\n        \"format\": \"Ôíº {usage}%\",\n        \"states\": {\n            \"warning\": 70,\n            \"critical\": 90,\n        },\n    },\n    \n    \"temperature\": {\n        \"critical-threshold\": 80,\n        \"format-critical\": \"Ôãá {temperatureC}¬∞C\",\n        \"format\": \"Ôãâ {temperatureC}¬∞C\",\n        \"tooltip-format\": \"  Û∞çΩ: s-tui\\n {temperatureC}¬∞ Celsius\\n{temperatureF}¬∞ Fahrenheit\\n{temperatureK}¬∞ Kelvin\",\n        \"on-click\": \"footclient -T waybar_s-tui -e s-tui\"\n    },\n\n    \"disk\": {\n        \"interval\": 600,\n        \"format\": \"Û∞ãä {percentage_used}%\",\n        \"path\": \"/\",\n        \"on-click\": \"footclient -T waybar_dua -e dua i /\",\n        \"tooltip-format\": \"    Û∞çΩ: dua\\nTotal: {total}\\n Used: {used} ({percentage_used}%)\\n Free: {free} ({percentage_free}%)\",\n    },\n\n    \"memory\": {\n        \"interval\": 5,\n        \"format\": \"ÓøÖ {}%\",\n        \"on-click\": \"footclient -T waybar_btm -e btm\", \n        \"states\": {\n            \"warning\": 70,\n            \"critical\": 90\n        },\n        \"tooltip-format\": \"        Û∞çΩ: btm\\n   Memory: {total} GiB\\n   In use: {used} GiB ({percentage}%)\\nAvailable: {avail} GiB\\n     Swap: {swapTotal} GiB\\n   In use: {swapUsed} GiB ({swapPercentage}%)\\nAvailable: {swapAvail} GiB\",\n    },\n\n    \"wireplumber\": {\n        \"format\": \"{icon} {volume}%\",\n        \"format-muted\": \"Û∞ùü muted\",\n        \"on-click\": \"pavucontrol\",\n        \"on-click-right\": \"pamixer --toggle-mute\",\n        \"format-icons\": [\"Û∞ïø\", \"Û∞ñÄ\", \"Û∞ïæ\"],\n        \"tooltip-format\": \"LÛ∞çΩ: pavucontrol\\nRÛ∞çΩ: Toggle mute\\nNode: {node_name}\",\n    },\n\n    \"battery\": {\n        \"states\": {\n            \"warning\": 20,\n            \"critical\": 10\n        },\n        \"format\": \"{icon} {capacity}%\",\n        \"format-charging\": \"{icon} {capacity}% Ôá¶\",\n        \"format-plugged\": \"{icon} {capacity}% Ôá¶\",\n        \"format-full\": \"{icon} {capacity}% Ôá¶\",\n        \"format-icons\": [\"ÔâÑ\", \"ÔâÉ\", \"ÔâÇ\", \"ÔâÅ\", \"ÔâÄ\"],\n        \"tooltip-format\": \"Û∞çΩ: battop\\n{timeTo}\",\n        \"on-click\": \"footclient -T waybar_battop -e battop\",\n    },\n\n    \"group/settings\": {\n        \"orientation\": \"inherit\",\n        \"drawer\": {\n            \"transition-duration\": 500,\n            \"children-class\": \"settings-drawer\",\n            \"transition-left-to-right\": true,\n            \"click-to-reveal\": true,\n        },\n        \"modules\": [\n            \"custom/settings\",\n            \"idle_inhibitor\",\n            \"backlight\",\n            \"bluetooth\",\n            \"tray\",\n        ]\n    },\n    \"custom/settings\": {\n        \"format\":\"Óöê\",\n        \"tooltip-format\": \"Settings\"\n    },\n\n    \"idle_inhibitor\": {\n        \"format\": \"{icon}\",\n        \"format-icons\": {\n            \"activated\": \"ÔÅÆ \",\n            \"deactivated\": \"ÔÅ∞ \"\n        },\n        \"tooltip-format-activated\": \"Idle Inhibitor Activated\",\n        \"tooltip-format-deactivated\": \"Idle Inhibitor Deactivated\"\n    },\n\n    \"backlight\": {\n        \"format\": \"{icon} {percent}%\",\n        \"format-icons\": [\"Û∞Ñ∞\", \"Û∞™û\", \"Û∞™ü\", \"Û∞™†\", \"Û∞™°\", \"Û∞™¢\", \"Û∞™£\", \"Û∞™§\", \"Û∞™•\"],\n        \"tooltip-format\": \"Backlight (Scroll): {percent:}%\",\n        \"on-scroll-down\": \"brightnessctl -c backlight set 5%-\",\n        \"on-scroll-up\": \"brightnessctl -c backlight set +5%\"\n    },\n\n    \"bluetooth\": {\n    \t\"format\": \"Û∞ÇØ {status}:{num_connections}\",\n    \t\"format-on\": \"Û∞ÇØ\",\n    \t\"format-off\": \"Û∞Ç≤\",\n    \t\"format-disabled\": \"\", // an empty format will hide the module\n    \t\"format-icons\": [\"Û∞§æ\", \"Û∞§ø\", \"Û∞•Ä\", \"Û∞•Å\", \"Û∞•Ç\", \"Û∞•É\", \"Û∞•Ñ\", \"Û∞•Ö\", \"Û∞•Ü\", \"Û∞•à\"],\n    \t\"tooltip-format\": \"LÛ∞çΩ: bluetui\\nRÛ∞çΩ: bluetoothctl power on/off\\nController: {controller_alias}\\t{controller_address}\\nConnected devices: {num_connections}\",\n    \t\"tooltip-format-connected\": \"LÛ∞çΩ: bluetui\\nRÛ∞çΩ: bluetoothctl power on/off\\nController: {controller_alias}\\t{controller_address}\\nConnected devices: {num_connections}\\nDevice---------------Address------------Battery\\n{device_enumerate}\",\n    \t\"tooltip-format-enumerate-connected\": \"{device_alias:\u003c20} {device_address:\u003c18}\",\n    \t\"tooltip-format-enumerate-connected-battery\": \"{device_alias:\u003c20.20} {device_address:\u003c18.18} {icon} {device_battery_percentage}%\",\n       \t\"on-click\": \"footclient -T waybar_bluetui -e bluetui\",\n       \t\"on-click-right\": \"~/.config/sway/scripts/bluetooth_toggle.sh\"\n    },\n\n    \"tray\": {\n        \"icon-size\": 16,\n        \"spacing\":10\n    },\n\n    \"clock\": {\n        \"format\": \"Û∞Öê {:%OI:%M %p}\",\n        \"on-click\": \"footclient -T waybar_calcurse -e calcurse\",\n        // Uncomment to enable right-click calcurse-caldav sync (you need to set it up in calcurse config)\n        //\"on-click-right\": \"notify-send \\\"Running calcurse-caldav...\\\" \\\"$(calcurse-caldav)\\\"\",\n        \"tooltip-format\": \"ÔÅ≥ {:%A %m/%d}\\n\\n\u003ctt\u003e\u003csmall\u003e{calendar}\u003c/small\u003e\u003c/tt\u003e\",\n        \"calendar\": {\n            \"on-scroll\": 1,\n            \"format\": {\n                \"months\":     \"\u003cspan color='#ffead3'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"days\":       \"\u003cspan color='#ecc6d9'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"weeks\":      \"\u003cspan color='#99ffdd'\u003e\u003cb\u003eW{}\u003c/b\u003e\u003c/span\u003e\",\n                \"weekdays\":   \"\u003cspan color='#ffcc66'\u003e\u003cb\u003e{}\u003c/b\u003e\u003c/span\u003e\",\n                \"today\":      \"\u003cspan color='#ff6699'\u003e\u003cb\u003e\u003cu\u003e{}\u003c/u\u003e\u003c/b\u003e\u003c/span\u003e\"\n            },\n        },\n        \"actions\": {\n            \"on-scroll-up\": \"shift_up\",\n            \"on-scroll-down\": \"shift_down\"\n        },\n    },\n\n    \"group/power\": {\n        \"orientation\": \"inherit\",\n        \"drawer\": {\n            \"transition-duration\": 500,\n            \"children-class\": \"power-drawer\",\n            \"transition-left-to-right\": true,\n        },\n        \"modules\": [\n            \"custom/power\",\n            \"custom/reboot\",\n            \"custom/reboot-uefi\",\n            \"custom/log-off\",\n            \"custom/suspend\",\n            \"custom/lock\",\n        ]\n    },\n    \"custom/power\": {\n        \"format\":\"‚èª\",\n        \"on-click\": \"systemctl poweroff\",\n        \"tooltip-format\": \"Shutdown\"\n    },\n    \"custom/reboot\": {\n        \"format\":\"Ó´í\",\n        \"on-click\": \"systemctl reboot\",\n        \"tooltip-format\": \"Reboot\"\n    },\n    \"custom/reboot-uefi\": {\n        \"format\":\"ÓÆê\",\n        \"on-click\": \"systemctl reboot --firmware-setup\",\n        \"tooltip-format\": \"Reboot to UEFI\"\n    },\n    \"custom/log-off\": {\n        \"format\":\"Û∞çÉ\",\n        \"on-click\": \"swaymsg exit\",\n        \"tooltip-format\": \"Log out\"\n    },\n    \"custom/suspend\": {\n        \"format\":\"Û∞§Ñ\",\n        \"on-click\": \"systemctl suspend\",\n        \"tooltip-format\": \"Suspend\"\n    },\n    \"custom/lock\": {\n        \"format\":\"Û∞åæ\",\n        \"on-click\": \"gtklock\",\n        \"tooltip-format\": \"Lock\"\n    },\n}\n","recorded":"2025-09-28 11:40:45.792542235","filePath":"null","pinned":false},{"value":"$ git clone https://github.com/Alexays/Waybar\n$ cd Waybar\n$ meson setup build\n$ ninja -C build\n$ ./build/waybar\n# If you want to install it\n$ ninja -C build install\n$ waybar","recorded":"2025-09-28 11:36:00.072395375","filePath":"null","pinned":false},{"value":"    sudo xbps-install -y waybar","recorded":"2025-09-28 11:33:42.755481469","filePath":"null","pinned":false},{"value":"Greenworks 40V 185 MPH Variable Speed Cordless Leaf Blower/Vacuum, 4.0Ah Battery and Charger Included ","recorded":"2025-09-25 21:29:07.794558410","filePath":"null","pinned":false},{"value":"DEWALT 20V MAX XR Lithium-Ion Cordless Brushless Handheld Leaf Blower","recorded":"2025-09-25 21:28:52.678949597","filePath":"null","pinned":false},{"value":"KKQUN-Q0Q6X-J6KQE","recorded":"2025-09-25 19:56:13.009757980","filePath":"null","pinned":false},{"value":"https://www.youtube.com/watch?v=Ycql400-ltQ","recorded":"2025-09-17 22:29:48.957007102","filePath":"null","pinned":false},{"value":"c59d357e435763b2cce5af9ddd9d9f01","recorded":"2025-09-03 21:16:32.350821244","filePath":"null","pinned":false},{"value":"asa5500-firmware-1118.SPA","recorded":"2025-09-03 21:14:45.358134221","filePath":"null","pinned":false},{"value":"VIEWER20","recorded":"2025-09-01 18:53:59.690087730","filePath":"null","pinned":false},{"value":"Ohio_Shaves","recorded":"2025-09-01 18:53:26.676110893","filePath":"null","pinned":false},{"value":"https://getrockwell.com/ohio_shaves","recorded":"2025-09-01 18:51:31.841887190","filePath":"null","pinned":false},{"value":"VZHZG-KETIA-W6LP3","recorded":"2025-08-31 21:53:56.439027809","filePath":"null","pinned":false},{"value":"Rockwell Razors 6","recorded":"2025-08-31 21:48:17.894251048","filePath":"null","pinned":false},{"value":"Rockwell 6S/C","recorded":"2025-08-31 21:46:34.611454484","filePath":"null","pinned":false},{"value":"Merkur 34C","recorded":"2025-08-31 21:45:16.193951396","filePath":"null","pinned":false},{"value":"Rockwell 6C","recorded":"2025-08-31 21:42:42.945491909","filePath":"null","pinned":false},{"value":"Merkur","recorded":"2025-08-31 21:34:15.691639501","filePath":"null","pinned":false},{"value":"local ","recorded":"2025-07-13 23:44:34.250758817","filePath":"null","pinned":false},{"value":"eme tokyonight-storm]])","recorded":"2025-07-13 23:42:03.487053467","filePath":"null","pinned":false},{"value":"local function Spectrum()\n  vim.cmd.colorscheme(\"tokyonight-storm\")\n\n  -- Custom Colours\n  vim.cmd([[highlight LineNr guifg=#29465B]])\n  vim.cmd([[highlight CursorColumn guifg=#737CA1]])\n  vim.cmd([[highlight CursorLineNr guifg=#FF00FF]])\n  vim.cmd([[highlight IncSearch guibg=#FF00FF]])\nend\n\nSpectrum()\n\n","recorded":"2025-07-13 23:34:42.439761814","filePath":"null","pinned":false},{"value":"vim.cmd(\"colorscheme tokyonight-storm\")","recorded":"2025-07-13 23:33:10.924908415","filePath":"null","pinned":false},{"value":"end","recorded":"2025-07-13 23:33:04.050191095","filePath":"null","pinned":false},{"value":"me tokyonight-storm\")","recorded":"2025-07-13 23:32:18.390524261","filePath":"null","pinned":false},{"value":"    vim.cmd(\"colorscheme tokyonight-storm\")\n\n    -- Custom Colours\n    vim.cmd([[highlight LineNr guifg=#29465B]])\n    vim.cmd([[highlight CursorColumn guifg=#737CA1]])\n    vim.cmd([[highlight CursorLineNr guifg=#FF00FF]])\n    vim.cmd([[highlight IncSearch guibg=#FF00FF]])\n","recorded":"2025-07-13 23:25:40.673739518","filePath":"null","pinned":false},{"value":"require(\"tokyonight\").load({ style = \"storm\" })","recorded":"2025-07-13 22:29:29.406668417","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-07-13 22:23:55.299007525","filePath":"null","pinned":false},{"value":"-","recorded":"2025-07-13 22:14:11.815865652","filePath":"null","pinned":false},{"value":" Fix the colors","recorded":"2025-07-13 22:14:09.164660448","filePath":"null","pinned":false},{"value":"config.colorscheme","recorded":"2025-07-13 22:13:55.768793132","filePath":"null","pinned":false},{"value":"config = function()","recorded":"2025-07-13 22:07:00.281490931","filePath":"null","pinned":false},{"value":"local state = {\n\tbuf = -1, -- The one and only shared terminal buffer\n\tfloating = { win = -1 },\n\tvertical = { win = -1 },\n\thorizontal = { win = -1 },\n\tlast_mode = nil,\n}\n\n-- This function now correctly ensures the shared buffer exists\nlocal function set_shared_buffer()\n\tif not vim.api.nvim_buf_is_valid(state.buf) then\n\t\tstate.buf = vim.api.nvim_create_buf(false, true) -- Create if it doesn't exist\n\tend\n\treturn state.buf\nend\n\nlocal function create_floating_window(opts)\n\topts = opts or {}\n\tlocal width = opts.width or math.floor(vim.o.columns * 0.75)\n\tlocal height = opts.height or math.floor(vim.o.lines * 0.75)\n\n\tlocal col = math.floor((vim.o.columns - width) / 2)\n\tlocal row = math.floor((vim.o.lines - height) / 2)\n\n\tlocal buf = set_shared_buffer() -- Use the shared buffer\n\n\tlocal win_config = {\n\t\trelative = \"editor\",\n\t\twidth = width,\n\t\theight = height,\n\t\tcol = col,\n\t\trow = row,\n\t\tstyle = \"minimal\",\n\t\tborder = \"rounded\",\n\t}\n\n\tlocal win = vim.api.nvim_open_win(buf, true, win_config)\n\tstate.floating.win = win -- Store the created window ID\n\treturn win -- Return the window ID directly\nend\n\nlocal function create_split_window(orientation)\n\tlocal cmd = orientation == \"vertical\" and \"vsplit\" or \"split\"\n\tvim.cmd(cmd) -- This creates a new window displaying the *current* buffer initially\n\n\tlocal buf = set_shared_buffer() -- Use the shared buffer\n\tvim.api.nvim_win_set_buf(0, buf) -- Set the new split to display the shared buffer\n\n\tif orientation == \"horizontal\" then\n\t\tvim.cmd(\"resize 10\")\n\tend\n\n\tlocal win = vim.api.nvim_get_current_win()\n\tstate[orientation].win = win -- Store the created window ID\n\treturn win\nend\n\n-- Helper to check if our shared terminal is active in a given window\nlocal function is_our_terminal_visible(win_id)\n\tif vim.api.nvim_win_is_valid(win_id) then\n\t\tlocal win_buf = vim.api.nvim_win_get_buf(win_id)\n\t\t-- Check if it's our shared buffer AND if the window is currently visible (not hidden)\n\t\treturn win_buf == state.buf and vim.api.nvim_win_get_option(win_id, \"winblend\") == 0\n\tend\n\treturn false\nend\n\n-- Helper to hide our terminal in a given window\nlocal function hide_our_terminal(win_id)\n\tif vim.api.nvim_win_is_valid(win_id) then\n\t\tlocal win_buf = vim.api.nvim_win_get_buf(win_id)\n\t\tif win_buf == state.buf then\n\t\t\tvim.api.nvim_win_hide(win_id)\n\t\tend\n\tend\nend\n\nlocal function open_terminal(mode)\n\tlocal target_win_id = state[mode].win\n\tlocal opened_win_id = nil\n\n\t-- Determine if the target terminal mode is already visible and active\n\tif is_our_terminal_visible(target_win_id) then\n\t\t-- If it's already visible, then we are in a \"toggle off\" state for this mode.\n\t\t-- Just hide it and return.\n\t\thide_our_terminal(target_win_id)\n\t\treturn\n\tend\n\n\t-- If we're here, the target terminal is either not valid, or valid but hidden.\n\t-- First, hide all *other* terminal windows that might be currently visible.\n\t-- We want only one instance of our shared terminal to be visible at a time.\n\tfor _, mode_key in ipairs({ \"floating\", \"vertical\", \"horizontal\" }) do\n\t\tif mode_key ~= mode then -- Don't hide the one we are about to open/show\n\t\t\thide_our_terminal(state[mode_key].win)\n\t\tend\n\tend\n\n\t-- Now, either create the window or show the existing one\n\tif not vim.api.nvim_win_is_valid(target_win_id) then\n\t\tif mode == \"floating\" then\n\t\t\topened_win_id = create_floating_window()\n\t\telse\n\t\t\topened_win_id = create_split_window(mode)\n\t\tend\n\telse\n\t\t-- Window is valid but hidden (or was previously used by something else)\n\t\tvim.api.nvim_win_set_buf(target_win_id, set_shared_buffer()) -- Ensure it shows our buffer\n\t\tvim.api.nvim_win_show(target_win_id) -- Make it visible\n\t\topened_win_id = target_win_id\n\tend\n\n\t-- Ensure the buffer is a terminal buffer\n\tlocal current_buf = set_shared_buffer()\n\tif vim.bo[current_buf].buftype ~= \"terminal\" then\n\t\tvim.api.nvim_set_current_win(opened_win_id) -- Ensure correct window is active for :terminal\n\t\tvim.cmd(\"terminal\")\n\tend\n\n\tvim.api.nvim_set_current_win(opened_win_id) -- Make the newly opened/shown window active\n\tstate.last_mode = mode -- Update the last used mode\nend\n\n-- Commands for each terminal layout\nvim.api.nvim_create_user_command(\"FT\", function()\n\topen_terminal(\"floating\")\nend, {})\nvim.api.nvim_create_user_command(\"HT\", function()\n\topen_terminal(\"horizontal\")\nend, {})\nvim.api.nvim_create_user_command(\"VT\", function()\n\topen_terminal(\"vertical\")\nend, {})\n\n-- Toggle command\nvim.api.nvim_create_user_command(\"TT\", function()\n\tlocal target_mode = state.last_mode or \"floating\" -- Default to floating\n\topen_terminal(target_mode)\nend, {})\n\nreturn {}\n","recorded":"2025-07-13 15:57:11.528967460","filePath":"null","pinned":false},{"value":"local state = {\n    buf = -1, -- The one and only shared terminal buffer\n    floating = { win = -1 },\n    vertical = { win = -1 },\n    horizontal = { win = -1 },\n    last_mode = nil,\n}\n\n-- This function now correctly ensures the shared buffer exists\nlocal function set_shared_buffer()\n    if not vim.api.nvim_buf_is_valid(state.buf) then\n        state.buf = vim.api.nvim_create_buf(false, true) -- Create if it doesn't exist\n    end\n    return state.buf\nend\n\nlocal function create_floating_window(opts)\n    opts = opts or {}\n    local width = opts.width or math.floor(vim.o.columns * 0.75)\n    local height = opts.height or math.floor(vim.o.lines * 0.75)\n\n    local col = math.floor((vim.o.columns - width) / 2)\n    local row = math.floor((vim.o.lines - height) / 2)\n\n    local buf = set_shared_buffer() -- Use the shared buffer\n\n    local win_config = {\n        relative = \"editor\",\n        width = width,\n        height = height,\n        col = col,\n        row = row,\n        style = \"minimal\",\n        border = \"rounded\",\n    }\n\n    local win = vim.api.nvim_open_win(buf, true, win_config)\n    state.floating.win = win -- Store the created window ID\n    return win -- Return the window ID directly\nend\n\nlocal function create_split_window(orientation)\n    local cmd = orientation == \"vertical\" and \"vsplit\" or \"split\"\n    vim.cmd(cmd) -- This creates a new window displaying the *current* buffer initially\n\n    local buf = set_shared_buffer() -- Use the shared buffer\n    vim.api.nvim_win_set_buf(0, buf) -- Set the new split to display the shared buffer\n\n    if orientation == \"horizontal\" then\n        vim.cmd(\"resize 10\")\n    end\n\n    local win = vim.api.nvim_get_current_win()\n    state[orientation].win = win -- Store the created window ID\n    return win\nend\n\n-- Helper to check if our shared terminal is active in a given window\nlocal function is_our_terminal_visible(win_id)\n    if vim.api.nvim_win_is_valid(win_id) then\n        local win_buf = vim.api.nvim_win_get_buf(win_id)\n        -- Check if it's our shared buffer AND if the window is currently visible (not hidden)\n        return win_buf == state.buf and vim.api.nvim_win_get_option(win_id, \"winblend\") == 0\n    end\n    return false\nend\n\n-- Helper to hide our terminal in a given window\nlocal function hide_our_terminal(win_id)\n    if vim.api.nvim_win_is_valid(win_id) then\n        local win_buf = vim.api.nvim_win_get_buf(win_id)\n        if win_buf == state.buf then\n            vim.api.nvim_win_hide(win_id)\n        end\n    end\nend\n\n\nlocal function open_terminal(mode)\n    local target_win_id = state[mode].win\n    local opened_win_id = nil\n\n    -- Determine if the target terminal mode is already visible and active\n    if is_our_terminal_visible(target_win_id) then\n        -- If it's already visible, then we are in a \"toggle off\" state for this mode.\n        -- Just hide it and return.\n        hide_our_terminal(target_win_id)\n        return\n    end\n\n    -- If we're here, the target terminal is either not valid, or valid but hidden.\n    -- First, hide all *other* terminal windows that might be currently visible.\n    -- We want only one instance of our shared terminal to be visible at a time.\n    for _, mode_key in ipairs({\"floating\", \"vertical\", \"horizontal\"}) do\n        if mode_key ~= mode then -- Don't hide the one we are about to open/show\n            hide_our_terminal(state[mode_key].win)\n        end\n    end\n\n    -- Now, either create the window or show the existing one\n    if not vim.api.nvim_win_is_valid(target_win_id) then\n        if mode == \"floating\" then\n            opened_win_id = create_floating_window()\n        else\n            opened_win_id = create_split_window(mode)\n        end\n    else\n        -- Window is valid but hidden (or was previously used by something else)\n        vim.api.nvim_win_set_buf(target_win_id, set_shared_buffer()) -- Ensure it shows our buffer\n        vim.api.nvim_win_show(target_win_id) -- Make it visible\n        opened_win_id = target_win_id\n    end\n\n    -- Ensure the buffer is a terminal buffer\n    local current_buf = set_shared_buffer()\n    if vim.bo[current_buf].buftype ~= \"terminal\" then\n        vim.api.nvim_set_current_win(opened_win_id) -- Ensure correct window is active for :terminal\n        vim.cmd(\"terminal\")\n    end\n\n    vim.api.nvim_set_current_win(opened_win_id) -- Make the newly opened/shown window active\n    state.last_mode = mode -- Update the last used mode\nend\n\n-- Commands for each terminal layout\nvim.api.nvim_create_user_command(\"FT\", function()\n    open_terminal(\"floating\")\nend, {})\nvim.api.nvim_create_user_command(\"HT\", function()\n    open_terminal(\"horizontal\")\nend, {})\nvim.api.nvim_create_user_command(\"VT\", function()\n    open_terminal(\"vertical\")\nend, {})\n\n-- Toggle command\nvim.api.nvim_create_user_command(\"TT\", function()\n    local target_mode = state.last_mode or \"floating\" -- Default to floating\n    open_terminal(target_mode)\nend, {})\n\nreturn {}","recorded":"2025-07-13 15:54:13.053739756","filePath":"null","pinned":false},{"value":"local state = {\n\tbuf = -1, -- Shared terminal buffer\n\tfloating = { win = -1 },\n\tvertical = { win = -1 },\n\thorizontal = { win = -1 },\n\tlast_mode = \"floating\", -- Added to store the last opened mode\n}\n\nlocal function set_buffer()\n\tif vim.api.nvim_buf_is_valid(state.buf) then\n\t\treturn state.buf\n\tend\n\tlocal buf = vim.api.nvim_create_buf(false, true) -- scratch buffer\n\tstate.buf = buf\n\treturn buf\nend\n\nlocal function create_floating_window(opts)\n\topts = opts or {}\n\tlocal width = opts.width or math.floor(vim.o.columns * 0.75)\n\tlocal height = opts.height or math.floor(vim.o.lines * 0.75)\n\n\t-- Calculate the position to center the window\n\tlocal col = math.floor((vim.o.columns - width) / 2)\n\tlocal row = math.floor((vim.o.lines - height) / 2)\n\n\t-- Create or set the buffer\n\tlocal buf = set_buffer()\n\n\t-- Define window configuration\n\tlocal win_config = {\n\t\trelative = \"editor\",\n\t\twidth = width,\n\t\theight = height,\n\t\tcol = col,\n\t\trow = row,\n\t\tstyle = \"minimal\", -- No borders or extra UI elements\n\t\tborder = \"rounded\",\n\t}\n\n\t-- Create the floating window\n\tlocal win = vim.api.nvim_open_win(buf, true, win_config)\n\n\treturn { buf = buf, win = win }\nend\n\nlocal function create_split_window(orientation)\n\tlocal cmd = orientation == \"vertical\" and \"vsplit\" or \"split\"\n\tvim.cmd(cmd)\n\n\tlocal buf = set_buffer()\n\tvim.api.nvim_win_set_buf(0, buf)\n\n\tif orientation == \"horizontal\" then\n\t\tvim.cmd(\"resize 10\")\n\tend\n\n\tlocal win = vim.api.nvim_get_current_win()\n\tstate[orientation].win = win\n\n\treturn win\nend\n\nlocal function open_terminal(mode)\n\tlocal target = state[mode]\n\n\t-- If we reach here, either the window was not valid or we are opening a new one\n\t-- or switching modes.\n\t-- First, hide any currently active terminal window if it's ours.\n\tfor _, mode_key in ipairs({ \"floating\", \"vertical\", \"horizontal\" }) do\n\t\tlocal win_to_hide = state[mode_key].win\n\t\tif vim.api.nvim_win_is_valid(win_to_hide) then\n\t\t\tlocal buf_of_win = vim.api.nvim_win_get_buf(win_to_hide)\n\t\t\tif buf_of_win == state.buf then\n\t\t\t\tvim.api.nvim_win_hide(win_to_hide)\n\t\t\tend\n\t\tend\n\tend\n\n\tlocal opened_win_id\n\tif mode == \"floating\" then\n\t\tlocal float_data = create_floating_window()\n\t\topened_win_id = float_data.win\n\t\t-- Also update the state for floating window\n\t\tstate.floating.win = opened_win_id\n\telse\n\t\t-- create_split_window already sets state[mode].win internally\n\t\topened_win_id = create_split_window(mode)\n\tend\n\n\t-- Set the buffer to terminal type if it's not already\n\tif vim.bo[state.buf].buftype ~= \"terminal\" then\n\t\tvim.cmd(\"terminal\")\n\tend\n\n\t-- Corrected line:\n\tvim.api.nvim_set_current_win(opened_win_id) -- Make the newly opened/shown window active\n\tstate.last_mode = mode -- Update the last used mode\nend\n\n-- Commands for each terminal layout\nvim.api.nvim_create_user_command(\"FT\", function()\n\topen_terminal(\"floating\")\nend, {})\nvim.api.nvim_create_user_command(\"HT\", function()\n\topen_terminal(\"horizontal\")\nend, {})\nvim.api.nvim_create_user_command(\"VT\", function()\n\topen_terminal(\"vertical\")\nend, {})\n\n-- New toggle command\nvim.api.nvim_create_user_command(\"TT\", function()\n\tif state.last_mode and vim.api.nvim_win_is_valid(state[state.last_mode].win) then\n\t\t-- If there's a last mode and its window is valid, toggle it\n\t\tlocal target = state[state.last_mode]\n\t\tlocal current_win_buf = vim.api.nvim_win_get_buf(target.win)\n\t\tif current_win_buf == state.buf then\n\t\t\tif vim.api.nvim_win_get_option(target.win, \"winblend\") == 0 then\n\t\t\t\tvim.api.nvim_win_hide(target.win)\n\t\t\telse\n\t\t\t\tvim.api.nvim_set_current_win(target.win)\n\t\t\tend\n\t\telse\n\t\t\t-- If the buffer in the last_mode window isn't our terminal buffer,\n\t\t\t-- it means the window was reused by something else.\n\t\t\t-- So, open the terminal in the last_mode.\n\t\t\topen_terminal(state.last_mode)\n\t\tend\n\telseif state.last_mode then\n\t\t-- If last_mode exists but the window isn't valid, re-open it\n\t\topen_terminal(state.last_mode)\n\telse\n\t\t-- If no last mode is set, default to floating\n\t\topen_terminal(\"floating\")\n\tend\nend, {})\n\nreturn {}\n","recorded":"2025-07-13 15:54:10.138839792","filePath":"null","pinned":false},{"value":"local state = {\n\tbuf = -1, -- Shared terminal buffer\n\tfloating = { win = -1 },\n\tvertical = { win = -1 },\n\thorizontal = { win = -1 },\n\tlast_mode = \"floating\", -- Added to store the last opened mode\n}\n\nlocal function set_buffer()\n\tif vim.api.nvim_buf_is_valid(state.buf) then\n\t\treturn state.buf\n\tend\n\tlocal buf = vim.api.nvim_create_buf(false, true) -- scratch buffer\n\tstate.buf = buf\n\treturn buf\nend\n\nlocal function create_floating_window(opts)\n\topts = opts or {}\n\tlocal width = opts.width or math.floor(vim.o.columns * 0.75)\n\tlocal height = opts.height or math.floor(vim.o.lines * 0.75)\n\n\t-- Calculate the position to center the window\n\tlocal col = math.floor((vim.o.columns - width) / 2)\n\tlocal row = math.floor((vim.o.lines - height) / 2)\n\n\t-- Create or set the buffer\n\tlocal buf = set_buffer()\n\n\t-- Define window configuration\n\tlocal win_config = {\n\t\trelative = \"editor\",\n\t\twidth = width,\n\t\theight = height,\n\t\tcol = col,\n\t\trow = row,\n\t\tstyle = \"minimal\", -- No borders or extra UI elements\n\t\tborder = \"rounded\",\n\t}\n\n\t-- Create the floating window\n\tlocal win = vim.api.nvim_open_win(buf, true, win_config)\n\n\treturn { buf = buf, win = win }\nend\n\nlocal function create_split_window(orientation)\n\tlocal cmd = orientation == \"vertical\" and \"vsplit\" or \"split\"\n\tvim.cmd(cmd)\n\n\tlocal buf = set_buffer()\n\tvim.api.nvim_win_set_buf(0, buf)\n\n\tif orientation == \"horizontal\" then\n\t\tvim.cmd(\"resize 10\")\n\tend\n\n\tlocal win = vim.api.nvim_get_current_win()\n\tstate[orientation].win = win\n\n\treturn win\nend\n\nlocal function open_terminal(mode)\n\tlocal target = state[mode]\n\n\t-- If we reach here, either the window was not valid or we are opening a new one\n\t-- or switching modes.\n\t-- First, hide any currently active terminal window if it's ours.\n\tfor _, mode_key in ipairs({ \"floating\", \"vertical\", \"horizontal\" }) do\n\t\tlocal win_to_hide = state[mode_key].win\n\t\tif vim.api.nvim_win_is_valid(win_to_hide) then\n\t\t\tlocal buf_of_win = vim.api.nvim_win_get_buf(win_to_hide)\n\t\t\tif buf_of_win == state.buf then\n\t\t\t\tvim.api.nvim_win_hide(win_to_hide)\n\t\t\tend\n\t\tend\n\tend\n\n\tlocal opened_win_id\n\tif mode == \"floating\" then\n\t\tlocal float_data = create_floating_window()\n\t\topened_win_id = float_data.win\n\t\t-- Also update the state for floating window\n\t\tstate.floating.win = opened_win_id\n\telse\n\t\t-- create_split_window already sets state[mode].win internally\n\t\topened_win_id = create_split_window(mode)\n\tend\n\n\t-- Set the buffer to terminal type if it's not already\n\tif vim.bo[state.buf].buftype ~= \"terminal\" then\n\t\tvim.cmd(\"terminal\")\n\tend\n\n\t-- Corrected line:\n\tvim.api.nvim_set_current_win(opened_win_id) -- Make the newly opened/shown window active\n\tstate.last_mode = mode -- Update the last used mode\nend\n\n-- Commands for each terminal layout\nvim.api.nvim_create_user_command(\"FT\", function()\n\topen_terminal(\"floating\")\nend, {})\nvim.api.nvim_create_user_command(\"HT\", function()\n\topen_terminal(\"horizontal\")\nend, {})\nvim.api.nvim_create_user_command(\"VT\", function()\n\topen_terminal(\"vertical\")\nend, {})\n\n-- New toggle command\nvim.api.nvim_create_user_command(\"TT\", function()\n\tif state.last_mode and vim.api.nvim_win_is_valid(state[state.last_mode].win) then\n\t\t-- If there's a last mode and its window is valid, toggle it\n\t\tlocal target = state[state.last_mode]\n\t\tlocal current_win_buf = vim.api.nvim_win_get_buf(target.win)\n\t\tif current_win_buf == state.buf then\n\t\t\tif vim.api.nvim_win_get_option(target.win, \"winblend\") == 0 then\n\t\t\t\tvim.api.nvim_win_hide(target.win)\n\t\t\telse\n\t\t\t\tvim.api.nvim_set_current_win(target.win)\n\t\t\tend\n\t\telse\n\t\t\t-- If the buffer in the last_mode window isn't our terminal buffer,\n\t\t\t-- it means the window was reused by something else.\n\t\t\t-- So, open the terminal in the last_mode.\n\t\t\topen_terminal(state.last_mode)\n\t\tend\n\telseif state.last_mode then\n\t\t-- If last_mode exists but the window isn't valid, re-open it\n\t\topen_terminal(state.last_mode)\n\telse\n\t\t-- If no last mode is set, default to floating\n\t\topen_terminal(\"floating\")\n\tend\nend, {})\n\nr","recorded":"2025-07-13 15:51:30.674777422","filePath":"null","pinned":false},{"value":"local function open_terminal(mode)\n    local target = state[mode]\n\n    -- If we reach here, either the window was not valid or we are opening a new one\n    -- or switching modes.\n    -- First, hide any currently active terminal window if it's ours.\n    for _, mode_key in ipairs({\"floating\", \"vertical\", \"horizontal\"}) do\n        local win_to_hide = state[mode_key].win\n        if vim.api.nvim_win_is_valid(win_to_hide) then\n            local buf_of_win = vim.api.nvim_win_get_buf(win_to_hide)\n            if buf_of_win == state.buf then\n                vim.api.nvim_win_hide(win_to_hide)\n            end\n        end\n    end\n\n    local opened_win_id\n    if mode == \"floating\" then\n        local float_data = create_floating_window()\n        opened_win_id = float_data.win\n        -- Also update the state for floating window\n        state.floating.win = opened_win_id\n    else\n        -- create_split_window already sets state[mode].win internally\n        opened_win_id = create_split_window(mode)\n    end\n\n    -- Set the buffer to terminal type if it's not already\n    if vim.bo[state.buf].buftype ~= \"terminal\" then\n        vim.cmd(\"terminal\")\n    end\n\n    -- Corrected line:\n    vim.api.nvim_set_current_win(opened_win_id) -- Make the newly opened/shown window active\n    state.last_mode = mode -- Update the last used mode\nend","recorded":"2025-07-13 15:50:23.663019191","filePath":"null","pinned":false},{"value":"Error executing Lua callback: /home/hoolies/.config/nvim/lua/core/terminal.lua:109: attempt to index local 'win' (a number value)\nstack traceback:\n\t/home/hoolies/.config/nvim/lua/core/terminal.lua:109: in function 'open_terminal'\n\t/home/hoolies/.config/nvim/lua/core/terminal.lua:118: in function \u003c/home/hoolies/.config/nvim/lua/core/terminal.lua:117\u003e","recorded":"2025-07-13 15:48:00.507019298","filePath":"null","pinned":false},{"value":"nil","recorded":"2025-07-13 15:42:03.968588595","filePath":"null","pinned":false},{"value":"local state = {\n\tbuf = -1, -- Shared terminal buffer\n\tfloating = { win = -1 },\n\tvertical = { win = -1 },\n\thorizontal = { win = -1 },\n\tlast_mode = \"floating\", -- Store the window state\n}\n\nlocal function set_buffer()\n\tif vim.api.nvim_buf_is_valid(state.buf) then\n\t\treturn state.buf\n\tend\n\tlocal buf = vim.api.nvim_create_buf(false, true) -- scratch buffer\n\tstate.buf = buf\n\treturn buf\nend\n\nlocal function create_floating_window(opts)\n\topts = opts or {}\n\tlocal width = opts.width or math.floor(vim.o.columns * 0.75)\n\tlocal height = opts.height or math.floor(vim.o.lines * 0.75)\n\n\t-- Calculate the position to center the window\n\tlocal col = math.floor((vim.o.columns - width) / 2)\n\tlocal row = math.floor((vim.o.lines - height) / 2)\n\n\t-- Create or set the buffer\n\tlocal buf = set_buffer()\n\n\t-- Define window configuration\n\tlocal win_config = {\n\t\trelative = \"editor\",\n\t\twidth = width,\n\t\theight = height,\n\t\tcol = col,\n\t\trow = row,\n\t\tstyle = \"minimal\", -- No borders or extra UI elements\n\t\tborder = \"rounded\",\n\t}\n\n\t-- Create the floating window\n\tlocal win = vim.api.nvim_open_win(buf, true, win_config)\n\n\treturn { buf = buf, win = win }\nend\n\nlocal function create_split_window(orientation)\n\tlocal cmd = orientation == \"vertical\" and \"vsplit\" or \"split\"\n\tvim.cmd(cmd)\n\n\tlocal buf = set_buffer()\n\tvim.api.nvim_win_set_buf(0, buf)\n\n\tif orientation == \"horizontal\" then\n\t\tvim.cmd(\"resize 10\")\n\tend\n\n\tlocal win = vim.api.nvim_get_current_win()\n\tstate[orientation].win = win\n\n\treturn win\nend\n\nlocal function open_terminal(mode)\n\tif not vim.api.nvim_win_is_valid(target.win) then\n\t\tlocal win\n\t\tif mode == \"floating\" then\n\t\t\twin = create_floating_window()\n\t\telse\n\t\t\twin = create_split_window(mode)\n\t\tend\n\n\t\tif vim.bo[state.buf].buftype ~= \"terminal\" then\n\t\t\tvim.cmd(\"terminal\")\n\t\tend\n\telse\n\t\tvim.api.nvim_win_hide(target.win)\n\tend\nend\n\n-- Commands for each terminal layout\nvim.api.nvim_create_user_command(\"FT\", function()\n\topen_terminal(\"floating\")\nend, {})\nvim.api.nvim_create_user_command(\"HT\", function()\n\topen_terminal(\"horizontal\")\nend, {})\nvim.api.nvim_create_user_command(\"VT\", function()\n\topen_terminal(\"vertical\")\nend, {})\n\nreturn {}\n\n\n\n\n","recorded":"2025-07-13 15:41:59.984975593","filePath":"null","pinned":false},{"value":"local state = {\n    buf = -1, -- Shared terminal buffer\n    floating = { win = -1 },\n    vertical = { win = -1 },\n    horizontal = { win = -1 },\n    last_mode = nil, -- Added to store the last opened mode\n}\n\nlocal function set_buffer()\n    if vim.api.nvim_buf_is_valid(state.buf) then\n        return state.buf\n    end\n    local buf = vim.api.nvim_create_buf(false, true) -- scratch buffer\n    state.buf = buf\n    return buf\nend\n\nlocal function create_floating_window(opts)\n    opts = opts or {}\n    local width = opts.width or math.floor(vim.o.columns * 0.75)\n    local height = opts.height or math.floor(vim.o.lines * 0.75)\n\n    -- Calculate the position to center the window\n    local col = math.floor((vim.o.columns - width) / 2)\n    local row = math.floor((vim.o.lines - height) / 2)\n\n    -- Create or set the buffer\n    local buf = set_buffer()\n\n    -- Define window configuration\n    local win_config = {\n        relative = \"editor\",\n        width = width,\n        height = height,\n        col = col,\n        row = row,\n        style = \"minimal\", -- No borders or extra UI elements\n        border = \"rounded\",\n    }\n\n    -- Create the floating window\n    local win = vim.api.nvim_open_win(buf, true, win_config)\n\n    return { buf = buf, win = win }\nend\n\nlocal function create_split_window(orientation)\n    local cmd = orientation == \"vertical\" and \"vsplit\" or \"split\"\n    vim.cmd(cmd)\n\n    local buf = set_buffer()\n    vim.api.nvim_win_set_buf(0, buf)\n\n    if orientation == \"horizontal\" then\n        vim.cmd(\"resize 10\")\n    end\n\n    local win = vim.api.nvim_get_current_win()\n    state[orientation].win = win\n\n    return win\nend\n\nlocal function open_terminal(mode)\n    local target = state[mode]\n\n    -- Check if the target window for the current mode is valid\n    if vim.api.nvim_win_is_valid(target.win) then\n        -- If it's valid, it means the terminal for this mode is already open.\n        -- We want to hide it if it's currently visible.\n        -- This logic is tricky if you want to ensure it's the *only* visible one.\n        -- For a simple toggle, if it's open, hide it. If it's hidden, show it.\n        local current_win_buf = vim.api.nvim_win_get_buf(target.win)\n        if current_win_buf == state.buf then -- Ensure it's *our* terminal buffer\n            if vim.api.nvim_win_get_option(target.win, \"winblend\") == 0 then -- Check if visible (winblend is 0 for non-floating, or active floating)\n                vim.api.nvim_win_hide(target.win)\n            else\n                vim.api.nvim_set_current_win(target.win)\n            end\n            return -- Exit after toggling visibility\n        end\n    end\n\n    -- If we reach here, either the window was not valid or we are opening a new one\n    -- or switching modes.\n    -- First, hide any currently active terminal window if it's ours.\n    for _, mode_key in ipairs({\"floating\", \"vertical\", \"horizontal\"}) do\n        local win_to_hide = state[mode_key].win\n        if vim.api.nvim_win_is_valid(win_to_hide) then\n            local buf_of_win = vim.api.nvim_win_get_buf(win_to_hide)\n            if buf_of_win == state.buf then\n                vim.api.nvim_win_hide(win_to_hide)\n            end\n        end\n    end\n\n    local win\n    if mode == \"floating\" then\n        win = create_floating_window()\n    else\n        win = create_split_window(mode)\n    end\n\n    -- Set the buffer to terminal type if it's not already\n    if vim.bo[state.buf].buftype ~= \"terminal\" then\n        vim.cmd(\"terminal\")\n    end\n\n    vim.api.nvim_set_current_win(win.win or win) -- Make the newly opened/shown window active\n    state.last_mode = mode -- Update the last used mode\nend\n\n-- Commands for each terminal layout\nvim.api.nvim_create_user_command(\"FT\", function()\n    open_terminal(\"floating\")\nend, {})\nvim.api.nvim_create_user_command(\"HT\", function()\n    open_terminal(\"horizontal\")\nend, {})\nvim.api.nvim_create_user_command(\"VT\", function()\n    open_terminal(\"vertical\")\nend, {})\n\n-- New toggle command\nvim.api.nvim_create_user_command(\"TT\", function()\n    if state.last_mode and vim.api.nvim_win_is_valid(state[state.last_mode].win) then\n        -- If there's a last mode and its window is valid, toggle it\n        local target = state[state.last_mode]\n        local current_win_buf = vim.api.nvim_win_get_buf(target.win)\n        if current_win_buf == state.buf then\n            if vim.api.nvim_win_get_option(target.win, \"winblend\") == 0 then\n                vim.api.nvim_win_hide(target.win)\n            else\n                vim.api.nvim_set_current_win(target.win)\n            end\n        else\n            -- If the buffer in the last_mode window isn't our terminal buffer,\n            -- it means the window was reused by something else.\n            -- So, open the terminal in the last_mode.\n            open_terminal(state.last_mode)\n        end\n    elseif state.last_mode then\n        -- If last_mode exists but the window isn't valid, re-open it\n        open_terminal(state.last_mode)\n    else\n        -- If no last mode is set, default to floating\n        open_terminal(\"floating\")\n    end\nend, {})\n\nreturn {}","recorded":"2025-07-13 15:41:22.960121627","filePath":"null","pinned":false},{"value":"123456Y\u0026","recorded":"2025-07-02 08:50:19.937489582","filePath":"null","pinned":false},{"value":"Create a report with the following things:\n1. Create a brief company summary that includes the following information, do not hallucinate just skip whatever you cannot find:\n  * Who they are?\n  * Where they started\n  * What is their market share?\n  * What is their competition?\n  * What are their finances:\n    * Year over year\n    * last year break down by quarters\n    * last 3 years\n    * What is the next year projection\n  * Are there any recent contracts or collaborations\n1. Identify and list and explain the core values of of the company\n1. Highlight the company's mission","recorded":"2025-06-29 22:30:33.351563842","filePath":"null","pinned":false},{"value":"---\n## Debunking ATS Myths for a Human-Centric Resume\n\nMany job seekers believe that Applicant Tracking Systems (ATS) are sophisticated AI tools that automatically reject resumes based on keyword matching or compliance scores. However, this is a misconception. ATS platforms are primarily databases designed to store and organize applications, not to act as \"terminators\" that filter out candidates. The real challenge for job seekers isn't bypassing an AI, but rather making their resume clear and impactful enough to capture a human recruiter's attention in a short amount of time.\n\n---\n### Key Myths About ATS and Resumes:\n\n* **Myth 1: ATS automatically rejects resumes for missing keywords or low scores.**\n    * **Reality:** ATS systems don't have a \"rejection algorithm\" or a scoring system that filters out candidates based on keyword density or percentage matches. Third-party sites often invent these metrics to sell their services. Recruiters rarely use clunky keyword filters as they often yield irrelevant results. The absence of a callback is due to the resume not clearly conveying value to a human reader, not an automated rejection.\n    * **Action:** Focus on **clarity** over keyword stuffing. Naturally embed relevant job titles and core skills from the posting into your achievements and bullet points. Write for a human reader, not a robot.\n\n* **Myth 2: You need an \"ATS-compliant\" resume.**\n    * **Reality:** There's no such thing as an \"ATS-compliant\" resume score. These scores are generated by third-party tools, not by the ATS itself, and are not seen or used by recruiters. Chasing these fake scores can lead to diluted messaging and a less effective resume.\n    * **Action:** Aim for a **\"reader-compliant\"** resume. Use a clean, standard layout, avoid graphics or gimmicks, and ensure your strongest achievements are immediately visible. Clarity is key to getting interviews, not a manufactured score.\n\n* **Myth 3: The \"white font trick\" works to hide keywords.**\n    * **Reality:** This is an outdated and counterproductive tactic. When a resume is parsed by an ATS, all text, including white font, is extracted into plain text. Recruiters will see these hidden keywords, which makes you appear untrustworthy and attempting to game the system.\n    * **Action:** **Highlight** relevant skills naturally within your experience and achievements. Show how you've applied a skill with concrete examples and results, rather than just listing it.\n\n* **Myth 4: ATS systems use AI to screen candidates.**\n    * **Reality:** Most ATS platforms are older, legacy systems not equipped with advanced AI for making hiring decisions. Furthermore, legal compliance issues (like OFCCP and EEOC regulations) prohibit companies from using automated tools to make final hiring decisions; human review is required by law. Recruiters make decisions, not algorithms.\n    * **Action:** **Write for a person, not a platform.** Structure your resume to quickly convey your relevance and results. Lead with impact, use scannable language, and make your contributions obvious.\n\n* **Myth 5: Getting rejected means the system filtered you out.**\n    * **Reality:** Silence after applying typically means a human recruiter overlooked your application due to high volume or a lack of immediate clarity in your resume. It's not a rejection by a bot, but invisibility to a human with limited time. Automated rejections are usually due to \"knockout questions\" set by recruiters (e.g., \"Do you require visa sponsorship?\").\n    * **Action:** **Optimize for human attention.** Make your value clear in the first few lines by leading with results. Use formatting that allows for quick scanning. Focus on effectively selling your skills and story to a human audience.\n\n---\n### What Actually Works: A Recruiter-Approved Framework\n\nThe goal of your resume is to get seen, read, and remembered by a human. This hinges on clarity and impact.\n\n1.  **Write for the Reader, Not the System:** Recruiters skim hundreds of resumes quickly. Lead with your best accomplishments and ensure your most recent job title is immediately obvious. Use a clean, easily scscannable layout.\n2.  **Show Business Impact, Not Just Job Activity:** Instead of listing duties, highlight the **outcomes** of your work with specific numbers and results (e.g., \"reduced churn by 14%\", \"increased pipeline conversions by 22%\").\n3.  **Bridge the Title Gap:** If your current job title doesn't perfectly match the role you're applying for, provide context. Use parentheses or a one-line summary to explain how your experience translates directly to the target role.\n\nBy understanding that your audience is human, you can stop wasting time on non-existent ATS filters and instead focus on crafting a resume that clearly communicates your value and gets you noticed.\n\n---\n## Prompt for LLMs to Create a Resume:\n\nBased on the understanding that resumes are primarily read by humans and that ATS systems are mainly for tracking, not filtering, create a resume that prioritizes clarity, impact, and human readability.\n\nHere's the framework to follow:\n\n**Resume Objective/Summary (Optional but Recommended for Career Changers):**\n* If included, make it concise (1-2 sentences) and immediately highlight your most relevant qualifications and the value you bring to the target role.\n\n**Contact Information:**\n* Standard format: Name, Phone, Email, LinkedIn Profile URL.\n\n**Professional Experience:**\n* For each role, clearly state: **Job Title, Company Name, Location, Dates of Employment.**\n* **Prioritize business impact over job duties.** For each bullet point, quantify your achievements with specific numbers, percentages, or concrete examples. Focus on *what changed because of your actions*.\n    * **Example (Instead of \"Managed projects\"):** \"Led cross-functional team of 8+ to deliver new product features 2 weeks ahead of schedule.\"\n    * **Example (Instead of \"Oversaw internal communications\"):** \"Streamlined internal communication processes, reducing meeting time by 15% and increasing team collaboration scores by 10%.\"\n* If there's a **\"title gap\"** (your current title doesn't directly match the target role), add a concise clarifier in parentheses next to your job title to connect your experience to the desired position.\n    * **Example:** \"Product Manager (Functionally led roadmap without formal title)\"\n\n**Education:**\n* Degree, Major, University Name, Location, Graduation Date (or expected date).\n* Relevant coursework or honors can be included if space permits and they are highly relevant.\n\n**Skills:**\n* List relevant technical skills, software proficiency, languages, etc. Be specific.\n\n**Formatting and Layout Considerations:**\n* **Clarity and Scannability are Paramount:** Use a clean, standard, and easy-to-read layout.\n* **Standard Fonts:** Stick to professional, widely available fonts (e.g., Arial, Calibri, Times New Roman).\n* **Avoid Gimmicks:** No graphics, images, or overly complex templates that might disrupt readability for a human or parsing by an ATS.\n* **Conciseness:** Aim for 1-2 pages, depending on years of experience, ensuring every element adds value and is easy to skim.\n* **Active Voice:** Use strong action verbs at the start of your bullet points.\n\n**Overall Goal:**\nThe resume should be designed so that a human recruiter can **skim it in 5-7 seconds** and immediately understand:\n1.  What your core qualifications are.\n2.  The business impact you've created.\n3.  Why you are a strong fit for the specific role.\n\nPlease provide the job description or details about the type of role you're applying for so I can tailor the resume effectively. What specific achievements or experiences do you want to highlight?","recorded":"2025-06-29 21:56:39.373143953","filePath":"null","pinned":false},{"value":"here's how you can reach more recruiters\nwith your resume well I have a hack to\nhelp you get past the ATS system three\nways to make sure your resume gets past\nthe ATS aka the applicant tracking\npicture this you're scrolling LinkedIn\nand you find a role that feels like a\nperfect match i'm a LinkedIn guy so you\ntailor your resume you rewrite your\nbullet points and hit submit 10 minutes\nlater automated rejection no explanation\nno feedback just silence and then it was\nlike crickets so you start asking\nyourself the usual questions why am I\nnot hearing back is the ATS rejecting me\nwhat's so wrong with my resume how do I\nget interviews at the companies I\nactually want to work for and naturally\nyou blame the ATS which is the applicant\ntracking system that supposedly filters\nout anyone without the right keywords in\ntheir resume but here's the thing that's\nnot what's happening and the longer that\nyou believe this the more time you're\ngoing to waste solving the wrong problem\nso in this video I'm going to break down\nthe five biggest ATS myths that are\nwasting your time show you where these\nfake metrics like 80% match score even\ncome from and give you the exact\nframework that actually gets r√©sum√©s\nnoticed because the problem isn't\nrejection it's invisibility\nwe'll start by explaining how ATS\nparsing really works the actual tech\nbehind what gets read and what gets\nignored then I'll reveal what recruiters\nsee in ATS's and why most r√©sum√©s never\neven get noticed and then next I'll\ndebunk the five worst r√©s myths that are\ncosting you opportunities and show you\nhow to fix them and finally I'll share a\nrecruiter approved framework to make\nsure your resume gets seen and read and\nonce you understand that everything\nchanges you're not going to see guesses\nin this video you're going to see how\nthe system actually works and just so\nyou know where this is coming from this\nisn't just recruiter advice i've\nliterally written the kind of software\ncode that tells machines how to read\nresumes let me show you how I got there\nmy dad spent his career building the\nearly technology that helped machines\nread text off of paper it's called OCR\nalso known as optical character\nrecognition technology and it works like\nthis a computer scans a document and\nturns what it sees into searchable text\nlike pulling an address off of a letter\nor reading a name off of a resume one of\nhis biggest projects was with the US\nPostal Service where his software\nactually helped scan and sort millions\nof envelopes packages newspapers and\nmagazines by reading the address and\nrouting each piece of mail fast and\nautomatically and I started learning\nabout this stuff when I was a kid and\nduring college when I majored in\ncomputer science I actually interned\nwith my dad at Seammens where I helped\nhim write some of these algorithms for\nmachine readable search strings which is\ncode that basically tells a system how\nto find exactly what it's looking for in\na wall of scanned text so when I moved\ninto recruiting screening over 100,000\nr√©sum√©s at Google Uber and Tik Tok I\nwasn't just using these systems i\nunderstood how they were built and what\nthey could and couldn't do that's why\nwhen I see job seekers wasting time\ntrying to beat the ATS it's personal\nbecause I know exactly what happens\nafter you hit submit and this isn't\ntheory it's how the system pulls your\nresume apart and what actually makes it\nreadable to the system and the people\nwho matter now let's do a gut check here\nif ATS systems really were powered by AI\nthat automatically rejects candidates\nyou'd be getting responses 100% of the\ntime do you want to know what it is yes\nor no but you're not getting those\nresponses instead you're getting silence\nthat silence isn't judgment it's proof\nthat no human even opened your\napplication because if you keep\nbelieving these myths you'll waste\nmonths tweaking templates chasing\nkeywords and buying the next resume hack\nthat shows up in your feed meanwhile\nyour applications are just sitting there\nunopened not because a robot rejected\nyou but because no human ever saw them\nnow look the T in ATS stands for\ntracking not terminator i'll be back\nthis isn't some AI scanning your resume\nwith red glowing eyes it's a database\nthat stores files lets recruiters post\njobs to job boards tracks candidates\nthrough the interview process and helps\nsearch through applications that's it\nsaying you want to beat the ATS is like\nsaying you want to beat Excel\nso you're still not sure what that\nactually looks like here's what an ATS\nsystem really is no robots no AI\noverlords just a glorified spreadsheet\nwith some filters watch this clip from\nSamstrom where he walks you through what\nrecruiters actually see on the back end\nof an ATS called Lever now I don't have\naccess to any ATS systems right now\nbecause I'm not an active recruiter\nhowever Sam is and he can show you in\nthis video in this video I'm going to\nshow you the inside of an applicant\ntracking system and address a common lie\nthat is told to job seekers in front of\nme here is Lever ATS it's one of the top\nATS's in the tech worlds and my personal\nfavorite on the left hand side here as\nyou can see I've selected the account\nexecutive under my open jobs on the\nright hand side is the list of\napplicants and this is typically how ATS\nwill show applicants usually by date of\napplication sometimes it'll be the most\nrecent or it'll be the oldest candidate\nthat applied up top so it's not about\nwhen to apply just apply when you can\nnow on the uh candidate side of things\nwhen you apply for a job externally and\nyou hit apply and when you upload or\nattach your resume what happens is when\nit says analyzing resume the applicant\ntracking system is parsing for contact\ninformation so it can build and populate\na profile in the ATS what it is not\ndoing is autorejecting or auto filtering\nby keywords that's not how applicant\ntracking systems work they do not\nwithhold candidates um from recruiters\ndespite what sites like job scan which\nare just designed to take your money um\nsay this here after scanning your resume\nthe ATS scores your resume on a one to\n100% scale a score of 80% or higher\nmoves you onto a human recruiter who may\ncontact you this is a downright lie this\njob site is trying to take your money do\nnot listen to this advice again\napplicant tracking systems don't auto\nfilter and reject solely based on\nkeywords if anyone wants to show me a\nsystem via Loom that would be great how\nit typically works is when you apply you\njust fall into a pool of applicants and\nas you can see Sam is now the in the\nsystem here yes some rating systems\nexist in applicant tracking systems but\nthese are not the default view and I've\nnot met a single recruiter who actively\nuses these because most of the times\nthis feature is just a gimmick that\ndoesn't actually produce results\nrecruiters are screening your resumes\nand once you understand that the real\nproblem isn't rejection it's\ninvisibility\neverything you need to do becomes\ncrystal clear so let's start with myth\nnumber one the ATS automatically rejects\nyour resume if you don't have the right\nkeywords so here's the myth you apply\nfor a job you don't hear back and you\nassume that the system filtered you out\nbecause you didn't include the right\nkeywords maybe you forgot to say crossf\nfunctional or stakeholder alignment so\nthe ATS tosses out your resume into the\ntrash it sounds technical it sounds\nplausible but it's wrong here's why it's\nwrong there is no hidden rejection\nalgorithm scanning your resume for a\nchecklist the ATS doesn't ding you for a\nmissing word and it doesn't operate on a\nscoring system in fact it doesn't reject\ncandidates at all applicant tracking\nsystems store r√©sum√©s they help\nrecruiters manage applications post jobs\nand if they want search by keyword but\nmost recruiters don't use those filters\nthey're clunky they're outdated and\noften surface the wrong candidates\nentirely so if you didn't get a call\nback it's not because you missed a\nphrase it's because your resume didn't\nmake your value immediately clear if\nanyone read it at all by the way I'm\nsure some of you go \"Well Farah see it\ndoes have the capability to actually\nfilter you out.\" Listen all it is is\nCtrlF like find on your keyboard that's\nthe functionality it's pretty much it\nhere's what it means for you chasing\nkeywords is like writing for a robot\nthat's not even in the room dear\nMr\nroyal\nHampton you dilute your message trying\nto impress a system that is not\nfiltering you out and in the process you\nend up burying the parts of your\nexperience that actually make you\ncompetitive so here's what you should do\ninstead don't optimize for density\noptimize for clarity use the job title\nand core skills from the posting and\nembed them naturally into your\nachievements and your bullet points\ndon't just say project management\ninstead you can say led a cross\nfunctional team of eight plus delivering\nnew product features 2 weeks ahead of\nschedule because you're not trying to\ngame a system you're trying to stop a\nhuman from scrolling myth number two you\nneed an ATS compliant resume the myth\nrs√© scoring tools claim to tell you how\nATS compliant your resume is they assign\na percentage like 67% 82% 93% and make\nit feel like you're just one adjustment\naway from getting through the system but\nhere's the truth those scores aren't\nbased on anything real here's why it's\nwrong they're not coming from an ATS\nthose numbers are not coming from an ATS\nat all they're not used by recruiters\nthey're created by third-party companies\nlike JobCan who are trying to sell\nresume√© audits these tools invented a\nmetric attach it to your resume and\nframe it as a barrier so they can sell\nyou their solution once you believe that\nthat score matters you stop writing your\nresume for people and you start\nrewriting it for some fake algorithm\nwhich ends up watering down your\nstrengths so you start chasing match\npercentages instead of leading with what\nmakes you hirable and the worst part no\none on the hiring team will ever see\nthat number here's what it means for you\noptimizing your resume for a fake score\ndoesn't just waste your time it makes\nyour resume worse you start removing the\nparts that make you credible all in the\nname of chasing a number that never even\nmattered you don't need a higher score\nyou need a clearer message here's what\nto do instead again there is no such\nthing as an ATS compliant resume what\nyou need is a reader compliant resume\nsomething that a human can skim in 5\nseconds and immediately understand why\nyou're qualified and all you need is a\nclean layout stick to standard fonts\navoid templates with graphics or\ngimmicks and make sure that your\nstrongest achievements show up where the\neye lands first because clarity gets\ninterviews scores don't if you're\nfinding this video helpful feel free to\nsubscribe myth number three the white\nfont trick works oh god so here's the\nmyth this is the zombie of r√© advice and\nno matter how many times it gets\ndebunked it keeps coming back the idea\nis this if you hide the job description\nor keywords in white font at the bottom\nof your resume the ATS will scan and see\nthem but human recruiters won't so it\ngets pitched as this like clever\nworkaround but it's not clever and it\ndoesn't work here's why it's wrong as a\nrecruiter I've seen what happens when\nsomeone tries this so you submit your\nresume it goes into the ATS and\neverything including the white font gets\nextracted into plain text that invisible\nblock of key words are now part of your\napplication record if a recruiter copies\nand pastes your resume to send it to a\nhiring manager that hidden section shows\nup in full and in that moment you've\ngone from being a potential fit to\nsomeone who's trying to game the system\nalso don't write words like hire me in\nwhite font thinking that a recruiter is\nputting your resume into chat GBT asking\nif it should hire you that is silly that\nis ridiculous but sadly thanks to people\non platforms like Tik Tok who are just\nchasing views this has become a problem\nhere's what it means for you now you\nthink you're improving your odds but\nwhat you're really doing is signaling\nthat you don't trust your own experience\nto speak for itself the white font trick\ndoesn't make you look techsavvy it makes\nyou look insecure and a risk here's what\nto do instead if the job calls for a\nspecific skill don't hide it highlight\nit instead of burying the phrase data\nanalysis 10 times in invisible text\nwrite a line that shows that you've done\nit so for example you could say \"Perform\ndata analysis on customer retention\nleading to a 15% increase in\nengagement.\" That's how you show\nalignment and that's how you get noticed\nnot by tricking a system but by making\nyour fit undeniable myth number four ats\nsystems use AI to screen candidates\nhere's the myth there is a super\npersistent belief that modern ATS\nplatforms use AI to automatically\nevaluate and reject candidates that the\nsystem somehow scans your resume scores\nit ranks you and filters you out before\na human ever gets involved it sounds\nhigh-tech it sounds efficient but that\nis not how hiring works here's why it's\nwrong most ATS platforms aren't powered\nby advanced AI they're old legacy\nsystems that are like 20 30 years old\nand they're basically patched together\nwith like duct tape they were built to\ntrack not to judge you can't plug\nmachine learning into a 20-year-old\nworkflow and expect it to make hiring\ndecisions and legally companies are not\nallowed to use AI in that way not\nwithout running into some serious\ncompliance issues right now there are\nlawsuits against platforms that are\nsuspected of doing exactly that no god\nplease no no the risk is too high the\nsystems aren't that smart and recruiters\naren't outsourcing judgment to an\nalgorithm here's what it means for you\nif you're spending hours trying to beat\nthe AI you're solving for a problem that\ndoesn't exist there's no machine making\nhiring decisions but there is a\nrecruiter that's skimming your resume in\nreal time under pressure and deciding in\nseconds whether to keep reading or to\nreject you so here's what you should do\ninstead write for a person not a\nplatform that means structuring your\nresume so a human can immediately grasp\nyour relevance and results lead with\nimpact use language that's easy to skim\nmake it obvious where you've made a\ndifference because no one's scanning for\nperfection but they are scanning for\nclarity myth number five getting\nrejected means the system filtered you\nout here's the myth you apply you hear\nnothing and you assume the ATS rejected\nyou that some hidden algorithm scanned\nyour resume decided you weren't\nqualified and filtered you out before a\nhuman even looked this is chocolate\nchocolate was my dad's cat and when he\ngets mosquito bites on his nose and gets\na little inflamed and we love him he's\nthe best kitty in the world and now back\nto your regularly scheduled program it\nfeels like there's this invisible wall\nbetween you and a job and that's not\nwhat's happening here's why it's wrong\nthis belief that some system filtered\nyou out automatically is one of the\nbiggest distractions in the entire job\nsearch process and here's the truth even\nif that kind of filtering existed it\nwouldn't solve your actual problem\nbecause the real issue here is volume\nhundreds and thousands of people apply\nto jobs every day many are qualified and\na lot more are unqualified so even if\nyou optimize your resume perfectly for\nsome imaginary score you're just landing\nin a bigger pile of other people who did\nthe same thing now let me try to frame\nthis differently people talk about\nhacking the YouTube algorithm in the\nsame way it's as if there's some secret\nformula that you can unlock to go viral\nbut anyone who's created content\nseriously knows the truth the algorithm\nis the audience same with your resume\nthere's no secret algorithm scoring your\napplication the algorithm is the\nrecruiter the algorithm is the hiring\nmanager the actual humans viewing your\nresume and if they don't immediately see\nsomething that makes them stop scrolling\nyou're gone it's also worth stating that\nmost people don't know but federal rules\nlike OFCCP and EEOC explicitly prohibit\nusing automated tools to make hiring\ndecisions every resume is supposed to be\nreviewed by human eyes that's not\noptional and it's required by law so\nthis idea of AI or bots rejecting you\nbefore anyone reads your resume it's not\njust wrong it's impossible here's what\nit means for you you're not getting\nfiltered out by a robot you're just\ngetting overlooked by a person who has\ntoo many resumes and too little time if\nyou want to get picked stop worrying\nabout systems and start thinking about\nstory selling your skills and when you\napply to jobs timing is much more\nimportant here's what to do instead\noptimize for attention not for software\nmake your value clear in the first few\nlines by leading with results use\nformatting that supports quick scanning\nnot keyword stuffing because your resume\nisn't being judged by a system it's\nbeing skimmed by a human and humans\ndon't respond to scores they respond to\nclarity now let's talk about what\nactually works so let's set aside the\nalgorithm myths okay we talked enough\nabout them because once your resume is\nsubmitted the real question isn't did\nthe system understand it it's did a\nhuman care enough to keep reading that's\nthe game not automation not trickery\nclarity here's what successful\ncandidates actually do consistently one\nthey write for the reader not the system\nrecruiters skim fast they're juggling\nmultiple roles hundreds of r√©sum√©s and\ntight deadlines if your resume opens\nwith a dense block of text or generic\njob duties you've already made their job\nharder the resume that gets noticed are\nscannable and are instantly clear they\ndon't bury the good stuff instead they\nlead with it here's what to do make your\nmost recent job title immediately\nobvious that way you frontload your best\naccomplishments use a layout that works\non any screen number two they show\nbusiness impact not job activity if your\nbullet points sound like a job\ndescription like managed weekly standups\nor oversaw internal comms you're\ndescribing your job duties what\nrecruiters want to see is momentum\nimpact what changed because you were\nthere here's what to do highlight\noutcomes with specific numbers like\nreduce churn by 14% cut onboarding time\nby 3 weeks increase pipeline conversions\nby 22% these are the results that tell a\nstory that moves the reader forward\nnumber three they bridge the title gap\nbefore someone disqualifies them here's\nwhat most people miss if your current\ntitle doesn't match the role you're\napplying for even if your experience is\nperfect you may get skipped not because\nyou're unqualified but because your\ntitle doesn't translate here's what to\ndo instead add context use parenthesis\nand add a clarifier lead with a oneline\nsummary that connects the dots like\nproduct manager open parenthesis\nfunctionally leading road map without\nformal title close parenthesis if they\ncan't see your fit within a few seconds\nthey're not going to keep reading so the\nbottom line here is instead of asking\n\"Did I get enough keywords?\" Start by\nasking \"Does this make sense to a human\nif they're skimming it in 5 seconds?\"\nBecause the recruiter isn't your enemy\nthe ATS isn't your gatekeeper your real\nchallenge is simple get seen get read\nand get remembered and that starts with\nclarity one other bonus tip that I want\nto point out to you is this some people\nwill say \"Well Farah within a few\nseconds I'm getting rejected by the\napplicant tracking system.\" And that\nmight be true but it's not because the\napplicant tracking system is using any\ntype of automation to reject you instead\nwhat usually is happening is when you\napply to a job they may ask you a couple\nof questions to determine whether or not\nyou're somebody that they want to hire\nsome of those questions could be are you\nover 18 years of age do you require\nsponsorship like visa sponsorship some\ncompanies don't sponsor visas and some\ncompanies have an age limit of who\nthey're able to hire we call those\nknockout questions so knockout questions\nare the ones that can automatically\nreject you but those questions were set\nup by the recruiter in order to filter\npeople out at the very beginning but\nthat's not the core of what those\napplications and what those systems are\nuh are designed to do so if you've been\nwondering why your applications go\nsilent why you're not hearing back or\nwhat's wrong with your resume it's not\nbecause of some hidden algorithm it's\nbecause you were solving the wrong\nproblem now that you know how these\nsystems actually work you can stop\noptimizing for filters that don't exist\nand start focusing on what does writing\na resume that makes your value from a\nbusiness perspective clear to the people\nwho make the decisions because when you\nstop guessing and start targeting the\nright things you're not just tweaking\nyour resume you're giving yourself a\nreal shot at landing interviews for the\njobs that you actually want watch this\nnext because it builds on everything\nthat we just covered","recorded":"2025-06-29 21:53:54.325831500","filePath":"null","pinned":false},{"value":"https://www.pharmacy295.gr/","recorded":"2025-06-28 23:22:29.681610522","filePath":"null","pinned":false},{"value":"https://v-pharmacy.gr/","recorded":"2025-06-28 23:20:01.573504574","filePath":"null","pinned":false},{"value":"100749","recorded":"2025-06-28 22:43:54.263661522","filePath":"null","pinned":false},{"value":"213009","recorded":"2025-06-28 22:43:35.450500798","filePath":"null","pinned":false},{"value":"Timmins","recorded":"2025-06-28 22:36:20.109914798","filePath":"null","pinned":false},{"value":"525874 ","recorded":"2025-06-28 22:17:39.227995240","filePath":"null","pinned":false},{"value":"Yall - Hundred Miles (Lyrics) ft. Gabriela Richardson","recorded":"2025-06-28 21:06:55.211002394","filePath":"null","pinned":false},{"value":"I'm a Thousand Miles from Home\" by Joe Ely","recorded":"2025-06-28 21:06:12.797533029","filePath":"null","pinned":false},{"value":"180038","recorded":"2025-06-24 22:25:58.989448903","filePath":"null","pinned":false},{"value":"6948040459","recorded":"2025-06-24 22:22:01.689096180","filePath":"null","pinned":false},{"value":"git clone https://github.com/herbstluftwm/herbstluftwm","recorded":"2025-06-23 22:45:45.139680090","filePath":"null","pinned":false},{"value":"RIPE Network Coordination Centre","recorded":"2025-06-15 21:43:15.364962932","filePath":"null","pinned":false},{"value":"131.189.72.110","recorded":"2025-06-15 21:42:32.437616293","filePath":"null","pinned":false},{"value":"laboro.co/","recorded":"2025-06-15 21:39:39.127657939","filePath":"null","pinned":false},{"value":"Haus of Brilliance","recorded":"2025-06-07 11:43:45.133254468","filePath":"null","pinned":false},{"value":"Stakeholder Communication","recorded":"2025-05-30 18:20:46.719747009","filePath":"null","pinned":false},{"value":"Project Management Institute","recorded":"2025-05-30 18:11:22.386839410","filePath":"null","pinned":false},{"value":"Jordan Barclay","recorded":"2025-05-26 15:41:02.472099768","filePath":"null","pinned":false},{"value":"Oregano","recorded":"2025-05-26 12:30:50.387455857","filePath":"null","pinned":false},{"value":"Education  Certifications\n\nTRIOS COLLEGE, Network Administrator\t20XX\n","recorded":"2025-05-10 23:31:11.328693616","filePath":"null","pinned":false},{"value":"Venngo2023","recorded":"2025-05-10 22:00:16.585799711","filePath":"null","pinned":false},{"value":"https://www.skroutz.gr/c/1105/tablet.html","recorded":"2025-05-10 17:18:05.033171689","filePath":"null","pinned":false},{"value":"R6JWV-4MGJY-GGC4Q-J92W7-QFFCZ","recorded":"2025-05-10 16:07:02.658832598","filePath":"null","pinned":false},{"value":"Sr. Systems Administrator-Remote Access","recorded":"2025-05-10 14:49:52.291191166","filePath":"null","pinned":false},{"value":"Technical Support Engineer","recorded":"2025-05-10 14:49:05.445199412","filePath":"null","pinned":false},{"value":"Technical Support Engineer- Remote","recorded":"2025-05-10 14:03:27.924502626","filePath":"null","pinned":false},{"value":"man git-commit | col -bx | grep -A 10000 -- \"--amend\" | grep -B 1 -- \"--amend\" | sed -n '/--amend/,/^       --[^ ]/p'","recorded":"2025-05-05 00:10:51.400566172","filePath":"null","pinned":false},{"value":"man git-commit | col -bx | rg -A 10000 --multiline-all '^\\s{7}--amend$' -e '^\\s{8,}[^ ]'","recorded":"2025-05-05 00:07:22.841926965","filePath":"null","pinned":false},{"value":"       --amend\n           Replace the tip of the current branch by creating a new commit. The\n           recorded tree is prepared as usual (including the effect of the -i\n           and -o options and explicit pathspec), and the message from the\n           original commit is used as the starting point, instead of an empty\n           message, when no other message is specified from the command line\n           via options such as -m, -F, -c, etc. The new commit has the same\n           parents and author as the current one (the --reset-author option\n           can countermand this).\n\n           It is a rough equivalent for:\n\n                       $ git reset --soft HEAD^\n                       $ ... do something else to come up with the right tree ...\n                       $ git commit -c ORIG_HEAD\n\n           but can be used to amend a merge commit.\n\n           You should understand the implications of rewriting history if you\n           amend a commit that has already been published. (See the\n           \"RECOVERING FROM UPSTREAM REBASE\" section in git-rebase(1).)\n\n","recorded":"2025-05-04 23:59:17.705397032","filePath":"null","pinned":false},{"value":"  ","recorded":"2025-05-04 23:59:10.148385398","filePath":"null","pinned":false}]}